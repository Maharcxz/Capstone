{"version":3,"mappings":"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","names":["checkWebGLSupport","canvas","gl","hasFloatTextures","hasDepthTexture","result","e","checkDeviceCapabilities","capabilities","webglResult","getOptimalThreeJSConfig","caps","startApp","VirtualTryOnApp","__vitePreload","error","loadFallbackVersion","showWebGLError","errorDiv","loadThreeJSFallback","webxrScript","script","resolve","url","onLoad","onProgress","onError","scene","geometry","material","cube","VirtualTryOn$1","browserSupport","attempts","maxAttempts","callback","id","constraints","getUserMedia","reject","issues","supported","userAgent","browserInfo","name","version","match","errorContainer","issue","permissionStatus","permission","storedStatus","lastChecked","timeDiff","twentyFourHours","stream","basicConstraints","timeoutId","message","isChrome","isFirefox","instructions","file","results","timeout","testResults","statusElement","cameraContainer","quality","rect","fov","rendererOptions","ambientIntensity","pmremGenerator","envMapSize","envMapTexture","data","i","y","intensity","faceAngle","headPitch","lightOffset","faceVisibility","axesHelper","attempt","fallbackPath","notice","errorOverlay","modelControls","scale","scaleValue","positionY","yValue","rotationY","rotValue","modelPath","gltf","maxRetries","lastError","loader","progress","percent","delay","_a","_b","_c","meshCount","hasGeometry","child","_d","mesh","index","errorMessage","productName","titleElement","landmarks","leftEye","rightEye","noseBridge","eyeDistance","newLandmarks","smoothingFactor","smoothedLandmarks","prev","curr","detected","leftEyeOuter","leftEyeInner","rightEyeOuter","rightEyeInner","foreheadCenter","chinCenter","leftEyeCenter","rightEyeCenter","faceHeight","faceWidth","faceDepth","normalizedFaceWidth","estimatedDistance","glassesCenter","ndcX","ndcY","ndcZ","isGLBModel","positionMultiplier","depthOffset","targetPosition","baseScale","targetScale","currentScale","newScale","eyeAngle","headTilt","targetRotation","foreheadLeft","foreheadRight","noseCenter","leftCheek","rightCheek","leftDistance","rightDistance","asymmetry","faceVertical","lightIntensity","normalizedIntensity","deltaX","deltaY","deltaZ","physicsInfluence","time","breathingOffset","originalScale","originalPosX","originalPosY","originalRotZ","adjustedScale","hintElement","existingHint","controlsPanel","faceDetectionToggle","firstSection","toggle","now","deltaTime","frameInterval","messageContainer","percentage","progressBar","loadingText","container","style","detect","currentTime","status","fps","targetFPS","avgFPS","a","b","modes","currentIndex","renderWidth","renderHeight","captureCanvas","captureCtx","link","device","currentTrack","currentFacingMode","newFacingMode","fallbackConstraints","restoreError","messageDiv","loadingOverlay","track","virtualTryOn","VirtualTryOn"],"ignoreList":[],"sources":["../../virtual-try-on.html?html-proxy&index=0.js","../../JS/virtual-try-on.js"],"sourcesContent":["\n        // Enhanced WebGL and browser compatibility checks\n        function checkWebGLSupport() {\n            try {\n                const canvas = document.createElement('canvas');\n                const gl = canvas.getContext('webgl2') || \n                          canvas.getContext('webgl') || \n                          canvas.getContext('experimental-webgl');\n                \n                if (!gl) {\n                    console.warn('WebGL context creation failed');\n                    return false;\n                }\n                \n                // Check for essential WebGL features\n                const hasFloatTextures = gl.getExtension('OES_texture_float') || \n                                        gl.getExtension('EXT_color_buffer_float');\n                const hasDepthTexture = gl.getExtension('WEBGL_depth_texture');\n                \n                const result = {\n                    supported: true,\n                    version: gl.getParameter(gl.VERSION),\n                    vendor: gl.getParameter(gl.VENDOR),\n                    renderer: gl.getParameter(gl.RENDERER),\n                    hasFloatTextures: !!hasFloatTextures,\n                    hasDepthTexture: !!hasDepthTexture,\n                    maxTextureSize: gl.getParameter(gl.MAX_TEXTURE_SIZE),\n                    maxVertexAttribs: gl.getParameter(gl.MAX_VERTEX_ATTRIBS)\n                };\n                \n                console.log('✅ WebGL Support Detected:', result);\n                return result;\n            } catch (e) {\n                console.error('❌ WebGL check failed:', e);\n                return false;\n            }\n        }\n        \n        // Check device capabilities\n        function checkDeviceCapabilities() {\n            const capabilities = {\n                isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n                isIOS: /iPad|iPhone|iPod/.test(navigator.userAgent),\n                isAndroid: /Android/.test(navigator.userAgent),\n                hasCamera: !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia),\n                hasWebGL: checkWebGLSupport(),\n                memoryLimit: navigator.deviceMemory || 'unknown',\n                cores: navigator.hardwareConcurrency || 'unknown',\n                pixelRatio: window.devicePixelRatio || 1\n            };\n            \n            console.log('Device capabilities:', capabilities);\n            return capabilities;\n        }\n        \n        // Store WebGL support status and device capabilities\n        const webglResult = checkWebGLSupport();\n        window.webglSupported = webglResult && webglResult.supported ? webglResult : false;\n        window.deviceCapabilities = checkDeviceCapabilities();\n        \n        // Log WebGL status for debugging\n        console.log('WebGL Support Check:', window.webglSupported);\n        console.log('Device Capabilities:', window.deviceCapabilities);\n        \n        // Determine optimal Three.js configuration based on device\n        function getOptimalThreeJSConfig() {\n            const caps = window.deviceCapabilities;\n            \n            if (caps.isMobile) {\n                return {\n                    antialias: caps.pixelRatio <= 1,\n                    shadowMap: false,\n                    maxLights: 2,\n                    pixelRatio: Math.min(caps.pixelRatio, 2),\n                    powerPreference: 'low-power'\n                };\n            } else {\n                return {\n                    antialias: true,\n                    shadowMap: true,\n                    maxLights: 4,\n                    pixelRatio: caps.pixelRatio,\n                    powerPreference: 'high-performance'\n                };\n            }\n        }\n        \n        // Store optimal configuration\n        window.threeJSConfig = getOptimalThreeJSConfig();\n        \n        // Initialize when DOM is ready\n        async function startApp() {\n            console.log('🚀 Starting Virtual Try-On Application...');\n            console.log('WebGL Support Status:', window.webglSupported);\n            \n            // Always try Vite modules first, regardless of WebGL status\n            // WebGL will be checked during actual initialization\n            try {\n                console.log('🔄 Attempting to load via Vite modules...');\n                const { VirtualTryOnApp } = await import('./JS/main.js');\n                const app = new VirtualTryOnApp();\n                await app.init();\n                console.log('✅ Virtual Try-On Application initialized via Vite modules');\n            } catch (error) {\n                console.error('❌ Failed to load via Vite modules:', error);\n                console.warn('⚠️ Falling back to legacy loading method');\n                \n                // Use fallback loading method\n                await loadFallbackVersion();\n            }\n        }\n        \n        // Show WebGL error message\n        function showWebGLError() {\n            const errorDiv = document.createElement('div');\n            errorDiv.className = 'webgl-error';\n            errorDiv.style.cssText = `\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                background: #ff4444;\n                color: white;\n                padding: 20px;\n                border-radius: 10px;\n                text-align: center;\n                z-index: 10000;\n                max-width: 400px;\n                box-shadow: 0 4px 20px rgba(0,0,0,0.3);\n            `;\n            errorDiv.innerHTML = `\n                <h3>WebGL Not Supported</h3>\n                <p>Your browser doesn't support WebGL, which is required for 3D model rendering.</p>\n                <p>Please try:</p>\n                <ul style=\"text-align: left; margin: 10px 0;\">\n                    <li>Updating your browser</li>\n                    <li>Enabling hardware acceleration</li>\n                    <li>Using a different browser (Chrome, Firefox, Safari)</li>\n                </ul>\n            `;\n            document.body.appendChild(errorDiv);\n        }\n        \n        // Fallback to legacy loading if Vite/modules fail\n        async function loadFallbackVersion() {\n            console.log('🔄 Loading fallback version...');\n            \n            // Check WebGL support again in fallback\n            if (!window.webglSupported) {\n                console.error('❌ WebGL not supported in fallback mode');\n                showWebGLError();\n                return;\n            }\n            \n            // Load Three.js from CDN first\n            const threeJSLoaded = await loadThreeJSFallback();\n            \n            if (!threeJSLoaded) {\n                console.error('❌ Failed to load Three.js');\n                return;\n            }\n            \n            // Load WebXR manager legacy version first\n            const webxrScript = document.createElement('script');\n            webxrScript.src = './JS/webxr-manager-legacy.js';\n            webxrScript.onload = () => {\n                console.log('✅ Legacy WebXRManager loaded');\n                \n                // Then load virtual try-on legacy version\n                const script = document.createElement('script');\n                script.src = './JS/virtual-try-on-legacy.js';\n                script.onload = () => {\n                    console.log('✅ Legacy VirtualTryOn loaded');\n                    \n                    // Initialize the legacy version\n                    if (typeof VirtualTryOn !== 'undefined') {\n                        window.virtualTryOn = new VirtualTryOn();\n                        window.virtualTryOn.init().then(() => {\n                            console.log('✅ Legacy Virtual Try-On initialized');\n                            \n                            // Initialize WebXR manager after VirtualTryOn is ready\n                            if (typeof WebXRManager !== 'undefined') {\n                                window.webXRManager = new WebXRManager(window.virtualTryOn);\n                                console.log('✅ Legacy WebXR Manager initialized');\n                            }\n                        }).catch(error => {\n                            console.error('❌ Failed to initialize legacy Virtual Try-On:', error);\n                        });\n                    } else {\n                        console.error('❌ VirtualTryOn class not found');\n                    }\n                };\n                script.onerror = () => {\n                    console.error('❌ Failed to load virtual-try-on-legacy.js');\n                };\n                document.head.appendChild(script);\n            };\n            webxrScript.onerror = () => {\n                console.warn('⚠️ Failed to load webxr-manager-legacy.js, loading without WebXR');\n                \n                // Load virtual try-on without WebXR\n                const script = document.createElement('script');\n                script.src = './JS/virtual-try-on-legacy.js';\n                script.onload = () => {\n                    console.log('✅ Legacy VirtualTryOn loaded (without WebXR)');\n                    \n                    if (typeof VirtualTryOn !== 'undefined') {\n                        window.virtualTryOn = new VirtualTryOn();\n                        window.virtualTryOn.init().then(() => {\n                            console.log('✅ Legacy Virtual Try-On initialized (without WebXR)');\n                        }).catch(error => {\n                            console.error('❌ Failed to initialize legacy Virtual Try-On:', error);\n                        });\n                    }\n                };\n                document.head.appendChild(script);\n            };\n            document.head.appendChild(webxrScript);\n        }\n        \n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', startApp);\n        } else {\n            startApp();\n        }\n        \n        // Fallback Three.js loading function for compatibility\n        async function loadThreeJSFallback() {\n            return new Promise((resolve) => {\n                console.log('📦 Loading Three.js from CDN...');\n                \n                try {\n                    // Load Three.js core from unpkg (more reliable)\n                    const script = document.createElement('script');\n                    script.src = 'https://unpkg.com/three@0.158.0/build/three.min.js';\n                    script.onload = () => {\n                        console.log('✅ Three.js core loaded');\n                        \n                        // Create GLTFLoader manually since CDN versions have ORB issues\n                        if (typeof THREE !== 'undefined') {\n                            // Add a basic GLTFLoader implementation\n                            THREE.GLTFLoader = function() {\n                                this.load = function(url, onLoad, onProgress, onError) {\n                                    console.log('Loading GLB model:', url);\n                                    // For now, create a simple placeholder\n                                    const scene = new THREE.Scene();\n                                    const geometry = new THREE.BoxGeometry(1, 1, 1);\n                                    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n                                    const cube = new THREE.Mesh(geometry, material);\n                                    scene.add(cube);\n                                    \n                                    if (onLoad) {\n                                        setTimeout(() => onLoad({ scene: scene }), 100);\n                                    }\n                                };\n                            };\n                            \n                            console.log('✅ Three.js loaded with basic GLTFLoader');\n                            window.threeJSLoaded = true;\n                            resolve(true);\n                        } else {\n                            console.error('❌ Three.js still not available');\n                            resolve(false);\n                        }\n                    };\n                    script.onerror = () => {\n                        console.warn('⚠️ CDN loading failed');\n                        resolve(false);\n                    };\n                    document.head.appendChild(script);\n                    \n                    // Timeout fallback\n                    setTimeout(() => {\n                        console.error('❌ Fallback loading timeout');\n                        resolve(false);\n                    }, 10000);\n                    \n                } catch (error) {\n                    console.warn('⚠️ CDN loading failed:', error);\n                    resolve(false);\n                }\n            });\n        }\n    ","// Virtual Try-On System with WebXR Support\r\n// Handles camera access, face detection, and 3D glasses overlay\r\n\r\nexport class VirtualTryOn {\r\n    constructor() {\r\n        this.video = null;\r\n        this.canvas = null;\r\n        this.ctx = null;\r\n        this.faceMesh = null;\r\n        this.scene = null;\r\n        this.camera = null;\r\n        this.renderer = null;\r\n        this.glassesModel = null;\r\n        this.currentFrame = null;\r\n        this.faceDetected = false;\r\n        this.faceLandmarks = null;\r\n        this.animationId = null;\r\n        this.faceDetectionEnabled = true; // Start with face detection enabled\r\n        this.faceDetectionActive = true;\r\n        this.lastDetectionTime = 0;\r\n        this.detectionInterval = 33; // ~30 FPS for face detection\r\n        \r\n        // Camera permission management\r\n        this.cameraPermissionGranted = false;\r\n        this.permissionCheckComplete = false;\r\n        \r\n        // Adjustment parameters\r\n        this.adjustments = {\r\n            size: 1.0,\r\n            positionX: 0,\r\n            positionY: 0,\r\n            rotation: 0\r\n        };\r\n        \r\n\r\n        \r\n        // Get URL parameters\r\n        this.urlParams = new URLSearchParams(window.location.search);\r\n        this.frameId = this.urlParams.get('frame');\r\n        this.productName = this.urlParams.get('productName');\r\n        \r\n        // Fixed frame ID to GLB model mapping with correct paths\r\n        this.frameToGLBMapping = {\r\n            'glasses-6': { id: 'base', name: 'Base Model', path: 'Assets/base.glb' },\r\n            'glasses-7': { id: 'base_pbr', name: 'Base PBR', path: 'Assets/base_basic_pbr.glb' },\r\n            'glasses-10': { id: 'base_shaded', name: 'Base Shaded', path: 'Assets/base_basic_shaded.glb' },\r\n            'glasses-11b': { id: 'base', name: 'Base Model', path: 'Assets/base.glb' },\r\n            'glasses-12': { id: 'base_pbr', name: 'Base PBR', path: 'Assets/base_basic_pbr.glb' },\r\n            'glasses-5b': { id: 'base_shaded', name: 'Base Shaded', path: 'Assets/base_basic_shaded.glb' }\r\n        };\r\n        \r\n        // Fallback models for different scenarios\r\n        this.fallbackModels = [\r\n            'Assets/base.glb',\r\n            'Assets/base_basic_pbr.glb',\r\n            'Assets/base_basic_shaded.glb'\r\n        ];\r\n        \r\n        // Enhanced 3D model management\r\n        this.modelLoadAttempts = 0;\r\n        this.maxLoadAttempts = 3;\r\n        this.modelLoadTimeout = 15000; // 15 seconds\r\n        this.fallbackModelUsed = false;\r\n        this.webglSupported = false;\r\n        this.threeJSReady = false;\r\n        \r\n        // Get the assigned GLB model for this product\r\n        this.assignedGLBModel = this.frameId ? this.frameToGLBMapping[this.frameId] : null;\r\n        this.currentGLBModel = null;\r\n        \r\n        // Device capabilities and performance settings\r\n        this.deviceCapabilities = window.deviceCapabilities || {};\r\n        this.threeJSConfig = window.threeJSConfig || {};\r\n        this.performanceMode = this.deviceCapabilities.isMobile ? 'low' : 'high';\r\n        this.lastRenderTime = 0;\r\n        this.performanceStats = null;\r\n        \r\n        // Adaptive quality settings based on device capabilities\r\n        this.qualitySettings = {\r\n            low: {\r\n                renderScale: 0.5,\r\n                targetFPS: 30,\r\n                maxParticles: 50,\r\n                shadowMapSize: 512,\r\n                antialias: false,\r\n                precision: 'lowp'\r\n            },\r\n            medium: {\r\n                renderScale: 0.75,\r\n                targetFPS: 45,\r\n                maxParticles: 100,\r\n                shadowMapSize: 1024,\r\n                antialias: true,\r\n                precision: 'mediump'\r\n            },\r\n            high: {\r\n                renderScale: 1.0,\r\n                targetFPS: 60,\r\n                maxParticles: 200,\r\n                shadowMapSize: 2048,\r\n                antialias: true,\r\n                precision: 'highp'\r\n            }\r\n        };\r\n        \r\n        // Initialize when ready\r\n        this.waitForDependencies().then(() => this.init());\r\n    }\r\n    \r\n    async waitForDependencies() {\r\n        // Add browser compatibility polyfills first\r\n        this.addBrowserPolyfills();\r\n        \r\n        // Check browser compatibility\r\n        const browserSupport = this.checkBrowserCompatibility();\r\n        if (!browserSupport.supported) {\r\n            this.showBrowserCompatibilityError(browserSupport.issues);\r\n            return;\r\n        }\r\n        \r\n        // Wait for WebGL and Three.js to be ready\r\n        let attempts = 0;\r\n        const maxAttempts = 50; // 5 seconds max wait\r\n        \r\n        while (attempts < maxAttempts) {\r\n            if (typeof window.webglSupported !== 'undefined' && typeof window.threeJSLoaded !== 'undefined') {\r\n                // Handle both object and boolean values for webglSupported\r\n                this.webglSupported = window.webglSupported && (window.webglSupported.supported !== false);\r\n                this.threeJSReady = window.threeJSLoaded;\r\n                break;\r\n            }\r\n            await new Promise(resolve => setTimeout(resolve, 100));\r\n            attempts++;\r\n        }\r\n        \r\n        if (attempts >= maxAttempts) {\r\n            console.warn('Timeout waiting for dependencies, proceeding with limited functionality');\r\n            this.webglSupported = false;\r\n            this.threeJSReady = false;\r\n        }\r\n    }\r\n    \r\n    addBrowserPolyfills() {\r\n        // Add performance.now() polyfill for older browsers\r\n        if (!window.performance || !window.performance.now) {\r\n            window.performance = window.performance || {};\r\n            window.performance.now = function() {\r\n                return Date.now();\r\n            };\r\n        }\r\n        \r\n        // Add requestAnimationFrame polyfill\r\n        if (!window.requestAnimationFrame) {\r\n            window.requestAnimationFrame = function(callback) {\r\n                return setTimeout(callback, 1000 / 60);\r\n            };\r\n        }\r\n        \r\n        // Add cancelAnimationFrame polyfill\r\n        if (!window.cancelAnimationFrame) {\r\n            window.cancelAnimationFrame = function(id) {\r\n                clearTimeout(id);\r\n            };\r\n        }\r\n        \r\n        // Add getUserMedia polyfill\r\n        if (!navigator.mediaDevices) {\r\n            navigator.mediaDevices = {};\r\n        }\r\n        \r\n        if (!navigator.mediaDevices.getUserMedia) {\r\n            navigator.mediaDevices.getUserMedia = function(constraints) {\r\n                const getUserMedia = navigator.webkitGetUserMedia || \r\n                                   navigator.mozGetUserMedia || \r\n                                   navigator.msGetUserMedia;\r\n                \r\n                if (!getUserMedia) {\r\n                    return Promise.reject(new Error('getUserMedia is not supported'));\r\n                }\r\n                \r\n                return new Promise((resolve, reject) => {\r\n                    getUserMedia.call(navigator, constraints, resolve, reject);\r\n                });\r\n            };\r\n        }\r\n        \r\n        console.log('Browser polyfills added');\r\n    }\r\n    \r\n    checkBrowserCompatibility() {\r\n        const issues = [];\r\n        let supported = true;\r\n        \r\n        // Check for required APIs\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n            issues.push('Camera access (getUserMedia) not supported');\r\n            supported = false;\r\n        }\r\n        \r\n        if (!window.WebGLRenderingContext && !window.WebGL2RenderingContext) {\r\n            issues.push('WebGL not supported');\r\n            supported = false;\r\n        }\r\n        \r\n        if (!window.Worker) {\r\n            issues.push('Web Workers not supported');\r\n            // Not critical, but log it\r\n            console.warn('Web Workers not supported - some features may be slower');\r\n        }\r\n        \r\n        // Check browser version compatibility\r\n        const userAgent = navigator.userAgent;\r\n        const browserInfo = this.getBrowserInfo(userAgent);\r\n        \r\n        if (browserInfo.name === 'Internet Explorer') {\r\n            issues.push('Internet Explorer is not supported');\r\n            supported = false;\r\n        }\r\n        \r\n        if (browserInfo.name === 'Chrome' && browserInfo.version < 60) {\r\n            issues.push('Chrome version too old (minimum: 60)');\r\n            supported = false;\r\n        }\r\n        \r\n        if (browserInfo.name === 'Firefox' && browserInfo.version < 55) {\r\n            issues.push('Firefox version too old (minimum: 55)');\r\n            supported = false;\r\n        }\r\n        \r\n        if (browserInfo.name === 'Safari' && browserInfo.version < 11) {\r\n            issues.push('Safari version too old (minimum: 11)');\r\n            supported = false;\r\n        }\r\n        \r\n        return { supported, issues, browserInfo };\r\n    }\r\n    \r\n    getBrowserInfo(userAgent) {\r\n        let name = 'Unknown';\r\n        let version = 0;\r\n        \r\n        if (userAgent.indexOf('Chrome') > -1) {\r\n            name = 'Chrome';\r\n            const match = userAgent.match(/Chrome\\/(\\d+)/);\r\n            version = match ? parseInt(match[1]) : 0;\r\n        } else if (userAgent.indexOf('Firefox') > -1) {\r\n            name = 'Firefox';\r\n            const match = userAgent.match(/Firefox\\/(\\d+)/);\r\n            version = match ? parseInt(match[1]) : 0;\r\n        } else if (userAgent.indexOf('Safari') > -1) {\r\n            name = 'Safari';\r\n            const match = userAgent.match(/Version\\/(\\d+)/);\r\n            version = match ? parseInt(match[1]) : 0;\r\n        } else if (userAgent.indexOf('Edge') > -1) {\r\n            name = 'Edge';\r\n            const match = userAgent.match(/Edge\\/(\\d+)/);\r\n            version = match ? parseInt(match[1]) : 0;\r\n        } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('Trident') > -1) {\r\n            name = 'Internet Explorer';\r\n        }\r\n        \r\n        return { name, version };\r\n    }\r\n    \r\n    showBrowserCompatibilityError(issues) {\r\n        const errorContainer = document.createElement('div');\r\n        errorContainer.className = 'browser-compatibility-error';\r\n        errorContainer.innerHTML = `\r\n            <div class=\"error-content\">\r\n                <h3>Browser Compatibility Issues</h3>\r\n                <p>Your browser doesn't support some required features:</p>\r\n                <ul>\r\n                    ${issues.map(issue => `<li>${issue}</li>`).join('')}\r\n                </ul>\r\n                <p>Please try using a modern browser like:</p>\r\n                <ul>\r\n                    <li>Chrome 60+</li>\r\n                    <li>Firefox 55+</li>\r\n                    <li>Safari 11+</li>\r\n                    <li>Edge 79+</li>\r\n                </ul>\r\n            </div>\r\n        `;\r\n        \r\n        // Add styles\r\n        errorContainer.style.cssText = `\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(0, 0, 0, 0.9);\r\n            color: white;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            z-index: 10000;\r\n            font-family: 'Poppins', sans-serif;\r\n        `;\r\n        \r\n        errorContainer.querySelector('.error-content').style.cssText = `\r\n            background: #1a1a1a;\r\n            padding: 2rem;\r\n            border-radius: 8px;\r\n            max-width: 500px;\r\n            text-align: center;\r\n        `;\r\n        \r\n        document.body.appendChild(errorContainer);\r\n    }\r\n    \r\n    async init() {\r\n        try {\r\n            // Check WebGL support first\r\n            if (!this.webglSupported) {\r\n                this.showWebGLError();\r\n                return;\r\n            }\r\n            \r\n            await this.setupCamera();\r\n            await this.setupFaceDetection();\r\n            \r\n            // Only setup 3D if Three.js is ready\r\n            if (this.threeJSReady) {\r\n                this.setupThreeJS();\r\n                await this.loadAssignedGLBModelWithRetry();\r\n            } else {\r\n                this.show3DModelError('3D rendering unavailable - Three.js failed to load');\r\n            }\r\n            \r\n            this.setupControls();\r\n            this.enhanceControls();\r\n            \r\n            this.hideLoading();\r\n            \r\n            // Set up fallback if face detection is not available\r\n            if (!this.faceDetectionEnabled) {\r\n                this.setDefaultGlassesPosition();\r\n            }\r\n            \r\n            this.startDetection();\r\n        } catch (error) {\r\n            console.error('Initialization error:', error);\r\n            this.showError('Failed to initialize virtual try-on. Please check camera permissions and refresh the page.');\r\n        }\r\n    }\r\n    \r\n    showWebGLError() {\r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.className = 'webgl-error';\r\n        errorDiv.innerHTML = `\r\n            <h3>WebGL Not Supported</h3>\r\n            <p>Your browser doesn't support WebGL, which is required for 3D model rendering.</p>\r\n            <p>Please try:</p>\r\n            <ul style=\"text-align: left; margin: 10px 0;\">\r\n                <li>Updating your browser</li>\r\n                <li>Enabling hardware acceleration</li>\r\n                <li>Using a different browser (Chrome, Firefox, Safari)</li>\r\n            </ul>\r\n        `;\r\n        document.body.appendChild(errorDiv);\r\n    }\r\n    \r\n    async setupCamera() {\r\n        this.video = document.getElementById('videoElement');\r\n        this.canvas = document.getElementById('canvasElement');\r\n        this.ctx = this.canvas.getContext('2d');\r\n        \r\n        // Check if we're on HTTPS or localhost\r\n        const isSecureContext = window.isSecureContext || location.hostname === 'localhost' || location.hostname === '127.0.0.1';\r\n        \r\n        if (!isSecureContext) {\r\n            throw new Error('Camera access requires HTTPS. Please use a secure connection or localhost.');\r\n        }\r\n        \r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n            throw new Error('Camera API not supported in this browser.');\r\n        }\r\n        \r\n        // Check permission status and localStorage\r\n        const permissionStatus = await this.checkCameraPermission();\r\n        console.log('Camera permission status:', permissionStatus);\r\n        \r\n        // If permission was previously denied, show a helpful message\r\n        if (permissionStatus === 'denied') {\r\n            this.showCameraPermissionHelp();\r\n            throw new Error('Camera access was previously denied. Please enable camera access in your browser settings.');\r\n        }\r\n        \r\n        // If permission is already granted, proceed directly\r\n        if (permissionStatus === 'granted') {\r\n            return await this.initializeCamera();\r\n        }\r\n        \r\n        // For first-time users or when permission is prompt, request access\r\n        return await this.requestCameraAccess();\r\n    }\r\n    \r\n    async checkCameraPermission() {\r\n        try {\r\n            // Check browser permission API first\r\n            if (navigator.permissions && navigator.permissions.query) {\r\n                const permission = await navigator.permissions.query({ name: 'camera' });\r\n                \r\n                // Update localStorage with current permission state\r\n                localStorage.setItem('cameraPermissionStatus', permission.state);\r\n                localStorage.setItem('cameraPermissionLastChecked', Date.now().toString());\r\n                \r\n                // Listen for permission changes\r\n                permission.addEventListener('change', () => {\r\n                    localStorage.setItem('cameraPermissionStatus', permission.state);\r\n                    console.log('Camera permission changed to:', permission.state);\r\n                });\r\n                \r\n                return permission.state;\r\n            }\r\n        } catch (e) {\r\n            console.log('Permission API not supported, checking localStorage');\r\n        }\r\n        \r\n        // Fallback to localStorage for browsers without permission API\r\n        const storedStatus = localStorage.getItem('cameraPermissionStatus');\r\n        const lastChecked = localStorage.getItem('cameraPermissionLastChecked');\r\n        \r\n        // If we have a recent status (within 24 hours), use it\r\n        if (storedStatus && lastChecked) {\r\n            const timeDiff = Date.now() - parseInt(lastChecked);\r\n            const twentyFourHours = 24 * 60 * 60 * 1000;\r\n            \r\n            if (timeDiff < twentyFourHours && storedStatus === 'granted') {\r\n                return 'granted';\r\n            }\r\n        }\r\n        \r\n        return 'prompt';\r\n    }\r\n    \r\n    async requestCameraAccess() {\r\n        try {\r\n            console.log('Requesting camera access...');\r\n            this.showCameraPermissionRequest();\r\n            \r\n            const stream = await this.attemptCameraAccess();\r\n            \r\n            // Permission granted, update localStorage\r\n            localStorage.setItem('cameraPermissionStatus', 'granted');\r\n            localStorage.setItem('cameraPermissionLastChecked', Date.now().toString());\r\n            this.cameraPermissionGranted = true;\r\n            \r\n            this.hideCameraPermissionRequest();\r\n            return await this.setupVideoStream(stream);\r\n            \r\n        } catch (error) {\r\n            this.hideCameraPermissionRequest();\r\n            \r\n            if (error.name === 'NotAllowedError') {\r\n                // Permission denied, update localStorage\r\n                localStorage.setItem('cameraPermissionStatus', 'denied');\r\n                localStorage.setItem('cameraPermissionLastChecked', Date.now().toString());\r\n                this.showCameraPermissionHelp();\r\n                throw new Error('Camera access was denied. Please allow camera access to use the virtual try-on feature.');\r\n            }\r\n            \r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    async initializeCamera() {\r\n        try {\r\n            console.log('Initializing camera with existing permission...');\r\n            const stream = await this.attemptCameraAccess();\r\n            this.cameraPermissionGranted = true;\r\n            return await this.setupVideoStream(stream);\r\n        } catch (error) {\r\n            // Permission might have been revoked\r\n            if (error.name === 'NotAllowedError') {\r\n                localStorage.setItem('cameraPermissionStatus', 'denied');\r\n                this.showCameraPermissionHelp();\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    async attemptCameraAccess() {\r\n        const constraints = {\r\n            video: {\r\n                width: { ideal: 1280, min: 640 },\r\n                height: { ideal: 720, min: 480 },\r\n                facingMode: 'user'\r\n            },\r\n            audio: false\r\n        };\r\n        \r\n        try {\r\n            return await navigator.mediaDevices.getUserMedia(constraints);\r\n        } catch (error) {\r\n            // Try with basic constraints if ideal constraints fail\r\n            if (error.name === 'OverconstrainedError') {\r\n                console.log('Trying with basic camera constraints...');\r\n                const basicConstraints = {\r\n                    video: { facingMode: 'user' },\r\n                    audio: false\r\n                };\r\n                return await navigator.mediaDevices.getUserMedia(basicConstraints);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    async setupVideoStream(stream) {\r\n        this.video.srcObject = stream;\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            const timeoutId = setTimeout(() => {\r\n                reject(new Error('Video loading timeout'));\r\n            }, 10000);\r\n            \r\n            this.video.onloadedmetadata = () => {\r\n                clearTimeout(timeoutId);\r\n                this.video.play().then(() => {\r\n                    this.resizeCanvas();\r\n                    console.log('Camera initialized successfully');\r\n                    resolve();\r\n                }).catch(reject);\r\n            };\r\n            \r\n            this.video.onerror = (e) => {\r\n                clearTimeout(timeoutId);\r\n                reject(new Error('Video element error: ' + e.message));\r\n            };\r\n        });\r\n    }\r\n    \r\n    showCameraPermissionRequest() {\r\n        const existingMessage = document.getElementById('cameraPermissionRequest');\r\n        if (existingMessage) return;\r\n        \r\n        const message = document.createElement('div');\r\n        message.id = 'cameraPermissionRequest';\r\n        message.style.cssText = `\r\n            position: fixed;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background: rgba(0, 0, 0, 0.9);\r\n            color: white;\r\n            padding: 20px;\r\n            border-radius: 10px;\r\n            text-align: center;\r\n            z-index: 10000;\r\n            max-width: 400px;\r\n        `;\r\n        message.innerHTML = `\r\n            <h3>Camera Access Required</h3>\r\n            <p>Please allow camera access to use the virtual try-on feature.</p>\r\n            <p>Your browser will ask for permission - please click \"Allow\".</p>\r\n        `;\r\n        document.body.appendChild(message);\r\n    }\r\n    \r\n    hideCameraPermissionRequest() {\r\n        const message = document.getElementById('cameraPermissionRequest');\r\n        if (message) {\r\n            message.remove();\r\n        }\r\n    }\r\n    \r\n    showCameraPermissionHelp() {\r\n        const existingMessage = document.getElementById('cameraPermissionHelp');\r\n        if (existingMessage) return;\r\n        \r\n        const message = document.createElement('div');\r\n        message.id = 'cameraPermissionHelp';\r\n        message.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            background: #ff6b6b;\r\n            color: white;\r\n            padding: 15px;\r\n            border-radius: 8px;\r\n            max-width: 300px;\r\n            z-index: 10000;\r\n            box-shadow: 0 4px 12px rgba(0,0,0,0.3);\r\n        `;\r\n        \r\n        const isChrome = /Chrome/.test(navigator.userAgent);\r\n        const isFirefox = /Firefox/.test(navigator.userAgent);\r\n        \r\n        let instructions = '';\r\n        if (isChrome) {\r\n            instructions = 'Click the camera icon in the address bar, then select \"Always allow\" and refresh the page.';\r\n        } else if (isFirefox) {\r\n            instructions = 'Click the shield icon in the address bar, then enable camera access and refresh the page.';\r\n        } else {\r\n            instructions = 'Enable camera access in your browser settings and refresh the page.';\r\n        }\r\n        \r\n        message.innerHTML = `\r\n            <h4>Camera Access Needed</h4>\r\n            <p>${instructions}</p>\r\n            <button onclick=\"this.parentElement.remove()\" style=\"\r\n                background: white;\r\n                color: #ff6b6b;\r\n                border: none;\r\n                padding: 5px 10px;\r\n                border-radius: 4px;\r\n                cursor: pointer;\r\n                margin-top: 10px;\r\n            \">Got it</button>\r\n        `;\r\n        document.body.appendChild(message);\r\n        \r\n        // Auto-remove after 10 seconds\r\n        setTimeout(() => {\r\n            if (message.parentElement) {\r\n                message.remove();\r\n            }\r\n        }, 10000);\r\n    }\r\n    \r\n    async setupFaceDetection() {\r\n        try {\r\n            // Check if FaceMesh is available\r\n            if (typeof FaceMesh === 'undefined') {\r\n                console.warn('MediaPipe FaceMesh not available, using fallback positioning');\r\n                this.faceMesh = null;\r\n                this.faceDetectionEnabled = false;\r\n                this.showFaceDetectionStatus('Face detection unavailable - using manual positioning');\r\n                return;\r\n            }\r\n            \r\n            this.showFaceDetectionStatus('Initializing face detection...');\r\n            \r\n            this.faceMesh = new FaceMesh({\r\n                locateFile: (file) => {\r\n                    return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\r\n                }\r\n            });\r\n            \r\n            // Enhanced options for better performance and accuracy\r\n            this.faceMesh.setOptions({\r\n                maxNumFaces: 1,\r\n                refineLandmarks: true,\r\n                minDetectionConfidence: 0.7,\r\n                minTrackingConfidence: 0.5,\r\n                staticImageMode: false\r\n            });\r\n            \r\n            this.faceMesh.onResults((results) => {\r\n                this.onFaceDetectionResults(results);\r\n            });\r\n            \r\n            // Test face detection initialization\r\n            await this.testFaceDetection();\r\n            \r\n            this.faceDetectionEnabled = true;\r\n            this.showFaceDetectionStatus('Face detection active');\r\n            console.log('Face detection initialized successfully');\r\n            \r\n        } catch (error) {\r\n            console.warn('Face detection setup failed:', error);\r\n            this.faceMesh = null;\r\n            this.faceDetectionEnabled = false;\r\n            this.showFaceDetectionStatus('Face detection failed - using manual positioning');\r\n            // Don't throw error - allow the app to continue without face detection\r\n        }\r\n    }\r\n    \r\n    async testFaceDetection() {\r\n        return new Promise((resolve, reject) => {\r\n            const timeout = setTimeout(() => {\r\n                reject(new Error('Face detection test timeout'));\r\n            }, 5000);\r\n            \r\n            const testResults = (results) => {\r\n                clearTimeout(timeout);\r\n                this.faceMesh.onResults(this.onFaceDetectionResults.bind(this));\r\n                resolve();\r\n            };\r\n            \r\n            this.faceMesh.onResults(testResults);\r\n            \r\n            // Send a test frame\r\n            if (this.video && this.video.readyState >= 2) {\r\n                this.faceMesh.send({ image: this.video }).catch(reject);\r\n            } else {\r\n                // If video isn't ready, just resolve\r\n                clearTimeout(timeout);\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n    \r\n    showFaceDetectionStatus(message) {\r\n        // Create or update status indicator\r\n        let statusElement = document.getElementById('faceDetectionStatus');\r\n        if (!statusElement) {\r\n            statusElement = document.createElement('div');\r\n            statusElement.id = 'faceDetectionStatus';\r\n            statusElement.style.cssText = `\r\n                position: absolute;\r\n                top: 10px;\r\n                left: 10px;\r\n                background: rgba(0, 0, 0, 0.8);\r\n                color: white;\r\n                padding: 8px 12px;\r\n                border-radius: 4px;\r\n                font-size: 12px;\r\n                font-family: 'Poppins', sans-serif;\r\n                z-index: 1000;\r\n                transition: opacity 0.3s ease;\r\n            `;\r\n            \r\n            const cameraContainer = document.querySelector('.camera-container');\r\n            if (cameraContainer) {\r\n                cameraContainer.appendChild(statusElement);\r\n            }\r\n        }\r\n        \r\n        statusElement.textContent = message;\r\n        statusElement.style.opacity = '1';\r\n        \r\n        // Auto-hide after 3 seconds for success messages\r\n        if (message.includes('active')) {\r\n            setTimeout(() => {\r\n                statusElement.style.opacity = '0.7';\r\n            }, 3000);\r\n        }\r\n    }\r\n    \r\n    setupThreeJS() {\r\n        try {\r\n            // Check if Three.js is available\r\n            if (typeof THREE === 'undefined') {\r\n                console.warn('Three.js not available, 3D rendering will be disabled');\r\n                return;\r\n            }\r\n            \r\n            // Get quality settings for current performance mode\r\n            const quality = this.qualitySettings[this.performanceMode];\r\n            console.log(`Setting up Three.js with ${this.performanceMode} quality mode:`, quality);\r\n            \r\n            // Create Three.js scene\r\n            this.scene = new THREE.Scene();\r\n            \r\n            // Ensure canvas has proper dimensions\r\n            const rect = this.canvas.getBoundingClientRect();\r\n            this.canvas.width = rect.width;\r\n            this.canvas.height = rect.height;\r\n            \r\n            // Create camera with adaptive FOV\r\n            const fov = this.deviceCapabilities.isMobile ? 70 : 75;\r\n            this.camera = new THREE.PerspectiveCamera(\r\n                fov,\r\n                this.canvas.width / this.canvas.height,\r\n                0.1,\r\n                1000\r\n            );\r\n            this.camera.position.set(0, 0, 5);\r\n            \r\n            // Create renderer with adaptive settings\r\n            const rendererOptions = {\r\n                canvas: this.canvas,\r\n                alpha: true,\r\n                antialias: quality.antialias,\r\n                precision: quality.precision,\r\n                powerPreference: this.deviceCapabilities.isMobile ? 'low-power' : 'high-performance',\r\n                preserveDrawingBuffer: true // Important for capturing screenshots\r\n            };\r\n            \r\n            // Use optimal WebGL context if available\r\n            if (this.threeJSConfig.contextType) {\r\n                rendererOptions.context = this.threeJSConfig.contextType;\r\n            }\r\n            \r\n            this.renderer = new THREE.WebGLRenderer(rendererOptions);\r\n            \r\n            // Set proper render size\r\n            this.renderer.setSize(this.canvas.width, this.canvas.height, false);\r\n            this.renderer.setClearColor(0x000000, 0); // Transparent background\r\n            this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // Limit pixel ratio for performance\r\n            \r\n            // Configure shadow mapping if supported\r\n            if (quality.shadowMapSize > 0 && !this.deviceCapabilities.isMobile) {\r\n                this.renderer.shadowMap.enabled = true;\r\n                this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n                this.renderer.shadowMap.setSize(quality.shadowMapSize, quality.shadowMapSize);\r\n            }\r\n            \r\n            // Enhanced AR-realistic lighting setup\r\n            const ambientIntensity = this.deviceCapabilities.isMobile ? 0.4 : 0.3;\r\n            this.ambientLight = new THREE.AmbientLight(0xffffff, ambientIntensity);\r\n            this.scene.add(this.ambientLight);\r\n            \r\n            // Main directional light (simulates room lighting)\r\n            this.mainLight = new THREE.DirectionalLight(0xffffff, 0.6);\r\n            this.mainLight.position.set(0, 1, 0.5);\r\n            this.scene.add(this.mainLight);\r\n            \r\n            // Secondary fill light (reduces harsh shadows)\r\n            this.fillLight = new THREE.DirectionalLight(0xffffff, 0.3);\r\n            this.fillLight.position.set(-0.5, 0.5, 1);\r\n            this.scene.add(this.fillLight);\r\n            \r\n            // Rim light for depth and realism\r\n            this.rimLight = new THREE.DirectionalLight(0xffffff, 0.2);\r\n            this.rimLight.position.set(0, -0.5, -1);\r\n            this.scene.add(this.rimLight);\r\n            \r\n            // Enable shadows for main light on higher quality settings\r\n            if (quality.shadowMapSize > 0 && !this.deviceCapabilities.isMobile) {\r\n                this.mainLight.castShadow = true;\r\n                this.mainLight.shadow.mapSize.width = quality.shadowMapSize;\r\n                this.mainLight.shadow.mapSize.height = quality.shadowMapSize;\r\n                this.mainLight.shadow.camera.near = 0.1;\r\n                this.mainLight.shadow.camera.far = 10;\r\n                this.mainLight.shadow.camera.left = -2;\r\n                this.mainLight.shadow.camera.right = 2;\r\n                this.mainLight.shadow.camera.top = 2;\r\n                this.mainLight.shadow.camera.bottom = -2;\r\n                this.mainLight.shadow.bias = -0.0001;\r\n            }\r\n            \r\n            // Add environment mapping for realistic reflections\r\n            this.setupEnvironmentMapping();\r\n            \r\n            // Add debug helpers (can be removed in production)\r\n            this.addDebugHelpers();\r\n            \r\n            console.log(`Three.js initialized successfully with ${this.performanceMode} quality settings`);\r\n            console.log('Render size:', this.canvas.width, 'x', this.canvas.height);\r\n            console.log('Device capabilities:', this.deviceCapabilities);\r\n        } catch (error) {\r\n            console.warn('Three.js setup failed:', error);\r\n            // Don't throw error - allow the app to continue without 3D rendering\r\n        }\r\n    }\r\n    \r\n    setupControls() {\r\n        // Action buttons\r\n        document.getElementById('captureBtn').addEventListener('click', () => {\r\n            this.capturePhoto();\r\n        });\r\n        \r\n        document.getElementById('switchCameraBtn').addEventListener('click', () => {\r\n            this.switchCamera();\r\n        });\r\n    }\r\n    \r\n    setupEnvironmentMapping() {\r\n        try {\r\n            // Create a simple environment map for realistic reflections\r\n            const pmremGenerator = new THREE.PMREMGenerator(this.renderer);\r\n            \r\n            // Create a simple gradient environment\r\n            const envMapSize = this.deviceCapabilities.isMobile ? 64 : 128;\r\n            const envMapTexture = new THREE.DataTexture(\r\n                new Uint8Array(envMapSize * envMapSize * 4),\r\n                envMapSize,\r\n                envMapSize,\r\n                THREE.RGBAFormat\r\n            );\r\n            \r\n            // Fill with gradient data for realistic environment lighting\r\n            const data = envMapTexture.image.data;\r\n            for (let i = 0; i < data.length; i += 4) {\r\n                const y = Math.floor((i / 4) / envMapSize) / envMapSize;\r\n                const intensity = Math.max(0.2, 1.0 - y); // Brighter at top\r\n                \r\n                data[i] = intensity * 255;     // R\r\n                data[i + 1] = intensity * 255; // G\r\n                data[i + 2] = intensity * 255; // B\r\n                data[i + 3] = 255;             // A\r\n            }\r\n            \r\n            envMapTexture.needsUpdate = true;\r\n            this.envMap = pmremGenerator.fromEquirectangular(envMapTexture).texture;\r\n            \r\n            // Set scene environment for realistic lighting\r\n            this.scene.environment = this.envMap;\r\n            \r\n            pmremGenerator.dispose();\r\n            console.log('Environment mapping setup complete');\r\n        } catch (error) {\r\n            console.warn('Environment mapping setup failed:', error);\r\n        }\r\n    }\r\n    \r\n    updateDynamicLighting() {\r\n        if (!this.faceLandmarks || !this.mainLight || !this.fillLight) return;\r\n        \r\n        // Calculate face orientation for dynamic lighting\r\n        const faceAngle = this.calculateFaceAngle();\r\n        const headPitch = this.calculateHeadPitch();\r\n        \r\n        // Adjust main light position based on face orientation\r\n        const lightOffset = 0.3;\r\n        this.mainLight.position.x = Math.sin(faceAngle) * lightOffset;\r\n        this.mainLight.position.y = 1 + Math.sin(headPitch) * lightOffset;\r\n        this.mainLight.position.z = 0.5 + Math.cos(faceAngle) * lightOffset;\r\n        \r\n        // Adjust fill light to complement main light\r\n        this.fillLight.position.x = -this.mainLight.position.x * 0.5;\r\n        this.fillLight.position.y = this.mainLight.position.y * 0.8;\r\n        \r\n        // Adjust ambient light intensity based on face visibility\r\n        const faceVisibility = Math.cos(faceAngle) * Math.cos(headPitch);\r\n        const ambientIntensity = Math.max(0.2, Math.min(0.5, 0.3 + faceVisibility * 0.2));\r\n        this.ambientLight.intensity = ambientIntensity;\r\n    }\r\n    \r\n    addDebugHelpers() {\r\n        // Add a simple wireframe cube to verify 3D rendering is working\r\n        const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\r\n        const material = new THREE.MeshBasicMaterial({ \r\n            color: 0x00ff00, \r\n            wireframe: true,\r\n            transparent: true,\r\n            opacity: 0.3\r\n        });\r\n        this.debugCube = new THREE.Mesh(geometry, material);\r\n        this.debugCube.position.set(1, 1, 0);\r\n        this.scene.add(this.debugCube);\r\n        \r\n        // Add coordinate axes helper\r\n        const axesHelper = new THREE.AxesHelper(1);\r\n        this.scene.add(axesHelper);\r\n        \r\n        console.log('Debug helpers added: wireframe cube and axes');\r\n    }\r\n    \r\n    async loadAssignedGLBModelWithRetry() {\r\n        console.log('🔍 Loading assigned GLB model with retry mechanism...');\r\n        console.log('🔍 Frame ID:', this.frameId);\r\n        console.log('🔍 Product Name:', this.productName);\r\n        console.log('🔍 Assigned GLB Model:', this.assignedGLBModel);\r\n        \r\n        // Update header title with product name\r\n        if (this.productName) {\r\n            this.updateHeaderTitle(`Virtual Try-On - ${this.productName}`);\r\n        }\r\n        \r\n        if (!this.assignedGLBModel) {\r\n            const message = this.frameId ? \r\n                `❌ No GLB model found for frame: ${this.frameId}` : \r\n                '⚠️ No frame specified in URL parameters';\r\n            console.warn(message);\r\n            await this.loadFallbackModel();\r\n            return;\r\n        }\r\n        \r\n        // Try to load the assigned model with retry mechanism\r\n        for (let attempt = 1; attempt <= this.maxLoadAttempts; attempt++) {\r\n            try {\r\n                this.modelLoadAttempts = attempt;\r\n                this.show3DModelLoading(`Loading 3D model (attempt ${attempt}/${this.maxLoadAttempts})...`);\r\n                \r\n                const success = await this.loadGlassesModel(this.assignedGLBModel.path);\r\n                if (success) {\r\n                    this.currentGLBModel = this.assignedGLBModel;\r\n                    this.showModelControls();\r\n                    this.show3DModelSuccess(`✅ Loaded ${this.assignedGLBModel.name} for ${this.productName || 'product'}`);\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(`Model loading attempt ${attempt} failed:`, error);\r\n                if (attempt === this.maxLoadAttempts) {\r\n                    console.log('All attempts failed, trying fallback models...');\r\n                    await this.loadFallbackModel();\r\n                    return;\r\n                }\r\n                // Wait before retry\r\n                await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\r\n            }\r\n        }\r\n    }\r\n    \r\n    async loadFallbackModel() {\r\n        console.log('Loading fallback model...');\r\n        this.fallbackModelUsed = true;\r\n        \r\n        for (const fallbackPath of this.fallbackModels) {\r\n            try {\r\n                this.show3DModelLoading('Loading fallback 3D model...');\r\n                const success = await this.loadGlassesModel(fallbackPath);\r\n                if (success) {\r\n                    this.showFallbackNotice();\r\n                    this.showModelControls();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error('Fallback model failed:', fallbackPath, error);\r\n            }\r\n        }\r\n        \r\n        // If all fallbacks fail, show error with retry option\r\n        this.showModelLoadError();\r\n    }\r\n    \r\n    showFallbackNotice() {\r\n        const notice = document.createElement('div');\r\n        notice.className = 'fallback-model';\r\n        notice.innerHTML = '⚠️ Using fallback 3D model - original model unavailable';\r\n        document.querySelector('.controls-panel').prepend(notice);\r\n        \r\n        setTimeout(() => {\r\n            if (notice.parentNode) {\r\n                notice.parentNode.removeChild(notice);\r\n            }\r\n        }, 5000);\r\n    }\r\n    \r\n    showModelLoadError() {\r\n        const errorOverlay = document.createElement('div');\r\n        errorOverlay.className = 'model-error-overlay';\r\n        errorOverlay.innerHTML = `\r\n            <h3>3D Model Loading Failed</h3>\r\n            <p>Unable to load the 3D glasses model.</p>\r\n            <p>This might be due to:</p>\r\n            <ul style=\"text-align: left; margin: 10px 0;\">\r\n                <li>Network connectivity issues</li>\r\n                <li>Server problems</li>\r\n                <li>Browser compatibility</li>\r\n            </ul>\r\n            <button class=\"retry-button\" onclick=\"virtualTryOn.retryModelLoading()\">Retry Loading</button>\r\n            <button class=\"retry-button\" onclick=\"virtualTryOn.hideModelError()\" style=\"background: #666; margin-left: 10px;\">Continue Without 3D</button>\r\n        `;\r\n        document.querySelector('.camera-container').appendChild(errorOverlay);\r\n    }\r\n    \r\n    hideModelError() {\r\n        const errorOverlay = document.querySelector('.model-error-overlay');\r\n        if (errorOverlay) {\r\n            errorOverlay.remove();\r\n        }\r\n    }\r\n    \r\n    async retryModelLoading() {\r\n        this.hideModelError();\r\n        this.modelLoadAttempts = 0;\r\n        await this.loadAssignedGLBModelWithRetry();\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    \r\n    showModelControls() {\r\n        const modelControls = document.getElementById('modelControls');\r\n        if (modelControls) {\r\n            modelControls.style.display = 'block';\r\n        }\r\n    }\r\n    \r\n    hideModelControls() {\r\n        const modelControls = document.getElementById('modelControls');\r\n        if (modelControls) {\r\n            modelControls.style.display = 'none';\r\n        }\r\n    }\r\n    \r\n    updateModelScale(scale) {\r\n        if (this.glassesModel) {\r\n            const scaleValue = parseFloat(scale);\r\n            this.glassesModel.scale.set(scaleValue * 0.1, scaleValue * 0.1, scaleValue * 0.1);\r\n            console.log('Model scale updated to:', scaleValue);\r\n        }\r\n    }\r\n    \r\n    updateModelPositionY(positionY) {\r\n        if (this.glassesModel) {\r\n            const yValue = parseFloat(positionY);\r\n            this.glassesModel.position.y = yValue;\r\n            console.log('Model position Y updated to:', yValue);\r\n        }\r\n    }\r\n    \r\n    updateModelRotationY(rotationY) {\r\n        if (this.glassesModel) {\r\n            const rotValue = parseFloat(rotationY) * (Math.PI / 180); // Convert to radians\r\n            this.glassesModel.rotation.y = rotValue;\r\n            console.log('Model rotation Y updated to:', rotationY, 'degrees');\r\n        }\r\n    }\r\n    \r\n    resetModelTransform() {\r\n        if (this.glassesModel) {\r\n            this.glassesModel.scale.set(0.1, 0.1, 0.1);\r\n            this.glassesModel.position.set(0, 0.2, 0);\r\n            this.glassesModel.rotation.set(0, 0, 0);\r\n            \r\n            // Reset UI controls\r\n            document.getElementById('modelScale').value = 1.0;\r\n            document.getElementById('modelPositionY').value = 0;\r\n            document.getElementById('modelRotationY').value = 0;\r\n            \r\n            console.log('Model transform reset to defaults');\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    async loadGlassesModel(modelPath) {\r\n        console.log('🔄 Loading glasses model with modern implementation:', modelPath);\r\n        \r\n        // Comprehensive Three.js availability check\r\n        if (!this.validateThreeJSEnvironment()) {\r\n            return false;\r\n        }\r\n        \r\n        try {\r\n            // Remove existing glasses model\r\n            if (this.glassesModel) {\r\n                console.log('🗑️ Removing existing glasses model');\r\n                this.scene.remove(this.glassesModel);\r\n                this.glassesModel = null;\r\n            }\r\n            \r\n            // Show loading state\r\n            this.show3DModelLoading();\r\n            \r\n            // Load the model with enhanced retry logic\r\n            const gltf = await this.loadGLTFWithRetry(modelPath, 3);\r\n            \r\n            // Process and configure the loaded model\r\n            await this.processLoadedGLTF(gltf, modelPath);\r\n            \r\n            console.log('🎉 Glasses model loading completed successfully!');\r\n            return true;\r\n            \r\n        } catch (error) {\r\n            console.error('❌ Critical error loading glasses model:', error);\r\n            this.handleGLTFLoadingError(error, modelPath);\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    validateThreeJSEnvironment() {\r\n        // Check if THREE is available\r\n        if (typeof THREE === 'undefined') {\r\n            console.error('❌ THREE.js not available');\r\n            this.show3DModelError('3D model viewer not available - THREE.js missing');\r\n            return false;\r\n        }\r\n        \r\n        // Check if GLTFLoader is available\r\n        if (typeof THREE.GLTFLoader === 'undefined') {\r\n            console.error('❌ GLTFLoader not available');\r\n            console.log('Available THREE properties:', Object.keys(THREE));\r\n            this.show3DModelError('3D model viewer not available - GLTFLoader missing');\r\n            return false;\r\n        }\r\n        \r\n        // Check if Three.js scene is set up\r\n        if (!this.scene || !this.camera || !this.renderer) {\r\n            console.error('❌ Three.js scene not properly initialized:', {\r\n                scene: !!this.scene,\r\n                camera: !!this.camera,\r\n                renderer: !!this.renderer\r\n            });\r\n            this.show3DModelError('3D scene not initialized');\r\n            return false;\r\n        }\r\n        \r\n        console.log('✅ Three.js environment validation passed');\r\n        return true;\r\n    }\r\n    \r\n    async loadGLTFWithRetry(modelPath, maxRetries = 3) {\r\n        let lastError;\r\n        \r\n        for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n            try {\r\n                console.log(`🔄 GLTF loading attempt ${attempt}/${maxRetries}`);\r\n                \r\n                const loader = new THREE.GLTFLoader();\r\n                \r\n                const gltf = await new Promise((resolve, reject) => {\r\n                    const timeoutId = setTimeout(() => {\r\n                        reject(new Error(`Loading timeout after 30 seconds (attempt ${attempt})`));\r\n                    }, 30000);\r\n                    \r\n                    loader.load(\r\n                        modelPath,\r\n                        (gltf) => {\r\n                            clearTimeout(timeoutId);\r\n                            console.log(`✅ GLTF loaded successfully on attempt ${attempt}:`, gltf);\r\n                            resolve(gltf);\r\n                        },\r\n                        (progress) => {\r\n                            if (progress.total > 0) {\r\n                                const percent = (progress.loaded / progress.total * 100).toFixed(1);\r\n                                console.log(`📊 Loading progress (attempt ${attempt}): ${percent}%`);\r\n                                this.update3DModelLoadingProgress(Math.round(percent));\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            clearTimeout(timeoutId);\r\n                            console.error(`❌ GLTF loading error on attempt ${attempt}:`, error);\r\n                            reject(error);\r\n                        }\r\n                    );\r\n                });\r\n                \r\n                return gltf; // Success!\r\n                \r\n            } catch (error) {\r\n                lastError = error;\r\n                console.warn(`⚠️ Attempt ${attempt} failed:`, error.message);\r\n                \r\n                if (attempt < maxRetries) {\r\n                    const delay = attempt * 1000; // Exponential backoff\r\n                    console.log(`⏳ Retrying in ${delay}ms...`);\r\n                    await new Promise(resolve => setTimeout(resolve, delay));\r\n                }\r\n            }\r\n        }\r\n        \r\n        throw new Error(`Failed to load GLTF after ${maxRetries} attempts. Last error: ${lastError.message}`);\r\n    }\r\n    \r\n    async processLoadedGLTF(gltf, modelPath) {\r\n        console.log('🔧 Processing loaded GLTF...');\r\n        \r\n        // Validate the loaded model\r\n        if (!gltf || !gltf.scene) {\r\n            throw new Error('Invalid GLTF structure - no scene found');\r\n        }\r\n        \r\n        // Extract the scene from GLTF\r\n        this.glassesModel = gltf.scene;\r\n        \r\n        // Log detailed model information\r\n        console.log('Model structure analysis:', {\r\n            scene: this.glassesModel,\r\n            children: this.glassesModel.children.length,\r\n            animations: gltf.animations?.length || 0,\r\n            cameras: gltf.cameras?.length || 0,\r\n            scenes: gltf.scenes?.length || 0\r\n        });\r\n        \r\n        // Validate model has geometry\r\n        let meshCount = 0;\r\n        let hasGeometry = false;\r\n        this.glassesModel.traverse((child) => {\r\n            if (child.isMesh && child.geometry) {\r\n                hasGeometry = true;\r\n                meshCount++;\r\n            }\r\n        });\r\n        \r\n        if (!hasGeometry) {\r\n            throw new Error('3D model contains no valid geometry');\r\n        }\r\n        \r\n        console.log(`✅ Found ${meshCount} meshes with valid geometry`);\r\n        \r\n        // Configure model transform\r\n        this.glassesModel.scale.set(1.0, 1.0, 1.0);\r\n        this.glassesModel.position.set(0, 0, 0);\r\n        this.glassesModel.rotation.set(0, 0, 0);\r\n        this.glassesModel.visible = true;\r\n        \r\n        // Process all meshes in the model\r\n        this.glassesModel.traverse((child) => {\r\n            if (child.isMesh) {\r\n                console.log(`🔧 Configuring mesh:`, {\r\n                    name: child.name || 'unnamed',\r\n                    geometry: child.geometry?.type,\r\n                    material: child.material?.type,\r\n                    visible: child.visible\r\n                });\r\n                \r\n                // Ensure mesh visibility and properties\r\n                child.visible = true;\r\n                child.castShadow = true;\r\n                child.receiveShadow = true;\r\n                child.frustumCulled = false; // Prevent culling issues\r\n                \r\n                // Configure materials\r\n                this.configureMeshMaterial(child);\r\n            }\r\n        });\r\n        \r\n        // Add to scene\r\n        this.scene.add(this.glassesModel);\r\n        console.log('✅ Glasses model added to scene');\r\n        console.log('Scene children count:', this.scene.children.length);\r\n        \r\n        // Store model info\r\n        this.currentModelPath = modelPath;\r\n        \r\n        // Apply any existing adjustments\r\n        this.updateGlassesTransform();\r\n        \r\n        // Hide loading state and force render\r\n        this.hide3DModelMessage();\r\n        this.show3DModelSuccess('3D model loaded successfully');\r\n        this.render3D();\r\n        \r\n        // Log final scene state\r\n        console.log('Final scene state:', {\r\n            children: this.scene.children.length,\r\n            glassesModel: !!this.glassesModel,\r\n            modelVisible: this.glassesModel?.visible\r\n        });\r\n    }\r\n    \r\n    configureMeshMaterial(mesh) {\r\n        if (!mesh.material) return;\r\n        \r\n        const materials = Array.isArray(mesh.material) ? mesh.material : [mesh.material];\r\n        \r\n        materials.forEach((material, index) => {\r\n            console.log(`🎨 Configuring material ${index}:`, material.type);\r\n            \r\n            // Ensure proper material properties\r\n            material.transparent = true;\r\n            material.opacity = 1.0;\r\n            material.side = THREE.DoubleSide;\r\n            material.alphaTest = 0.1;\r\n            material.depthWrite = true;\r\n            material.depthTest = true;\r\n            \r\n            // Force material update\r\n            material.needsUpdate = true;\r\n        });\r\n    }\r\n    \r\n    handleGLTFLoadingError(error, modelPath) {\r\n        console.error('❌ GLTF loading error details:', {\r\n            message: error.message,\r\n            stack: error.stack,\r\n            modelPath: modelPath,\r\n            threeJSAvailable: typeof THREE !== 'undefined',\r\n            gltfLoaderAvailable: typeof THREE?.GLTFLoader !== 'undefined',\r\n            sceneInitialized: !!this.scene\r\n        });\r\n        \r\n        this.hide3DModelMessage();\r\n        \r\n        // Determine error type and show appropriate message\r\n        let errorMessage = 'Failed to load 3D model';\r\n        \r\n        if (error.message.includes('404') || error.message.includes('not found')) {\r\n            errorMessage = '3D model file not found';\r\n        } else if (error.message.includes('timeout')) {\r\n            errorMessage = '3D model loading timeout';\r\n        } else if (error.message.includes('network')) {\r\n            errorMessage = 'Network error loading 3D model';\r\n        } else if (error.message.includes('parse') || error.message.includes('Invalid')) {\r\n            errorMessage = '3D model file is corrupted or invalid';\r\n        } else if (error.message.includes('CORS')) {\r\n            errorMessage = '3D model access blocked by security policy';\r\n        }\r\n        \r\n        this.show3DModelError(errorMessage);\r\n        \r\n        // Clean up on error\r\n        if (this.glassesModel) {\r\n            this.scene.remove(this.glassesModel);\r\n            this.glassesModel = null;\r\n        }\r\n    }\r\n    \r\n    updateHeaderTitle(productName) {\r\n        const titleElement = document.getElementById('tryOnTitle');\r\n        if (titleElement) {\r\n            if (productName) {\r\n                titleElement.textContent = `Virtual Try-On – ${productName}`;\r\n            } else {\r\n                titleElement.textContent = 'Virtual Try-On';\r\n            }\r\n        }\r\n    }\r\n    \r\n    onFaceDetectionResults(results) {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        \r\n        if (results.multiFaceLandmarks && results.multiFaceLandmarks.length > 0) {\r\n            const landmarks = results.multiFaceLandmarks[0];\r\n            \r\n            // Validate landmark quality\r\n            if (this.validateLandmarks(landmarks)) {\r\n                this.faceDetected = true;\r\n                \r\n                // Apply smoothing to reduce jitter\r\n                this.faceLandmarks = this.smoothLandmarks(landmarks);\r\n                this.updateGlassesPosition();\r\n                \r\n                // Update face detection status\r\n                this.updateFaceDetectionIndicator(true);\r\n            } else {\r\n                // Poor quality landmarks, keep previous position if available\r\n                if (!this.faceLandmarks) {\r\n                    this.faceDetected = false;\r\n                    if (this.glassesModel) {\r\n                        this.glassesModel.visible = false;\r\n                    }\r\n                }\r\n                this.updateFaceDetectionIndicator(false);\r\n            }\r\n        } else {\r\n            this.faceDetected = false;\r\n            if (this.glassesModel) {\r\n                this.glassesModel.visible = false;\r\n            }\r\n            this.updateFaceDetectionIndicator(false);\r\n        }\r\n        \r\n        this.render3D();\r\n    }\r\n    \r\n    validateLandmarks(landmarks) {\r\n        if (!landmarks || landmarks.length < 468) return false;\r\n        \r\n        // Check key landmarks for glasses positioning\r\n        const leftEye = landmarks[33];\r\n        const rightEye = landmarks[263];\r\n        const noseBridge = landmarks[168];\r\n        \r\n        // Ensure landmarks are within reasonable bounds\r\n        const isValid = leftEye && rightEye && noseBridge &&\r\n                       leftEye.x >= 0 && leftEye.x <= 1 &&\r\n                       leftEye.y >= 0 && leftEye.y <= 1 &&\r\n                       rightEye.x >= 0 && rightEye.x <= 1 &&\r\n                       rightEye.y >= 0 && rightEye.y <= 1;\r\n        \r\n        if (!isValid) return false;\r\n        \r\n        // Check if eyes are reasonably spaced\r\n        const eyeDistance = Math.sqrt(\r\n            Math.pow(rightEye.x - leftEye.x, 2) + \r\n            Math.pow(rightEye.y - leftEye.y, 2)\r\n        );\r\n        \r\n        return eyeDistance > 0.05 && eyeDistance < 0.5; // Reasonable eye distance\r\n    }\r\n    \r\n    smoothLandmarks(newLandmarks) {\r\n        if (!this.faceLandmarks) {\r\n            // First detection, no smoothing needed\r\n            return newLandmarks;\r\n        }\r\n        \r\n        const smoothingFactor = 0.7; // Higher = more smoothing\r\n        const smoothedLandmarks = [];\r\n        \r\n        for (let i = 0; i < newLandmarks.length; i++) {\r\n            const prev = this.faceLandmarks[i];\r\n            const curr = newLandmarks[i];\r\n            \r\n            if (prev && curr) {\r\n                smoothedLandmarks[i] = {\r\n                    x: prev.x * smoothingFactor + curr.x * (1 - smoothingFactor),\r\n                    y: prev.y * smoothingFactor + curr.y * (1 - smoothingFactor),\r\n                    z: prev.z * smoothingFactor + curr.z * (1 - smoothingFactor)\r\n                };\r\n            } else {\r\n                smoothedLandmarks[i] = curr;\r\n            }\r\n        }\r\n        \r\n        return smoothedLandmarks;\r\n    }\r\n    \r\n    updateFaceDetectionIndicator(detected) {\r\n        const statusElement = document.getElementById('faceDetectionStatus');\r\n        if (statusElement && this.faceDetectionEnabled) {\r\n            if (detected) {\r\n                statusElement.style.background = 'rgba(76, 175, 80, 0.8)'; // Green\r\n                statusElement.textContent = 'Face detected';\r\n            } else {\r\n                statusElement.style.background = 'rgba(255, 152, 0, 0.8)'; // Orange\r\n                statusElement.textContent = 'Looking for face...';\r\n            }\r\n        }\r\n    }\r\n    \r\n    updateGlassesPosition() {\r\n        if (!this.glassesModel || !this.faceLandmarks) return;\r\n        \r\n        // Get enhanced face landmarks for better positioning\r\n        const leftEyeOuter = this.faceLandmarks[33];   // Left eye outer corner\r\n        const leftEyeInner = this.faceLandmarks[133];  // Left eye inner corner\r\n        const rightEyeOuter = this.faceLandmarks[263]; // Right eye outer corner\r\n        const rightEyeInner = this.faceLandmarks[362]; // Right eye inner corner\r\n        const noseBridge = this.faceLandmarks[168];    // Nose bridge\r\n        const noseTop = this.faceLandmarks[6];         // Nose top\r\n        const foreheadCenter = this.faceLandmarks[9];  // Forehead center\r\n        const chinCenter = this.faceLandmarks[175];    // Chin center\r\n        \r\n        // Calculate eye centers for more accurate positioning\r\n        const leftEyeCenter = {\r\n            x: (leftEyeOuter.x + leftEyeInner.x) / 2,\r\n            y: (leftEyeOuter.y + leftEyeInner.y) / 2,\r\n            z: (leftEyeOuter.z + leftEyeInner.z) / 2\r\n        };\r\n        \r\n        const rightEyeCenter = {\r\n            x: (rightEyeOuter.x + rightEyeInner.x) / 2,\r\n            y: (rightEyeOuter.y + rightEyeInner.y) / 2,\r\n            z: (rightEyeOuter.z + rightEyeInner.z) / 2\r\n        };\r\n        \r\n        // Calculate face dimensions for better depth perception\r\n        const faceHeight = Math.abs(foreheadCenter.y - chinCenter.y);\r\n        const faceWidth = Math.abs(rightEyeOuter.x - leftEyeOuter.x);\r\n        const faceDepth = Math.abs(noseBridge.z - foreheadCenter.z);\r\n        \r\n        // Estimate distance from camera based on face size\r\n        const normalizedFaceWidth = faceWidth * this.canvas.width;\r\n        const estimatedDistance = Math.max(0.3, Math.min(3.0, 150 / normalizedFaceWidth));\r\n        \r\n        // Calculate glasses center position with improved depth calculation\r\n        const glassesCenter = {\r\n            x: (leftEyeCenter.x + rightEyeCenter.x) / 2,\r\n            y: (leftEyeCenter.y + rightEyeCenter.y) / 2 - (faceHeight * 0.05), // Slightly above eyes, proportional to face\r\n            z: (leftEyeCenter.z + rightEyeCenter.z) / 2 + (faceDepth * 0.1) // Slightly forward from face\r\n        };\r\n        \r\n        // Convert to Three.js coordinates with perspective correction\r\n        const ndcX = (glassesCenter.x * 2 - 1);\r\n        const ndcY = -(glassesCenter.y * 2 - 1);\r\n        const ndcZ = glassesCenter.z * estimatedDistance;\r\n        \r\n        // Enhanced positioning for GLB models with AR-like depth\r\n        const isGLBModel = this.currentGLBModel !== null;\r\n        const positionMultiplier = isGLBModel ? 1.8 : 1.5;\r\n        const depthOffset = isGLBModel ? -0.15 : -0.1; // Glasses sit slightly in front of face\r\n        \r\n        // Smooth interpolation for natural movement (reduce jitter)\r\n        const smoothingFactor = 0.15;\r\n        const targetPosition = {\r\n            x: ndcX * positionMultiplier,\r\n            y: ndcY * positionMultiplier,\r\n            z: ndcZ + depthOffset\r\n        };\r\n        \r\n        // Apply smooth interpolation\r\n        this.glassesModel.position.x += (targetPosition.x - this.glassesModel.position.x) * smoothingFactor;\r\n        this.glassesModel.position.y += (targetPosition.y - this.glassesModel.position.y) * smoothingFactor;\r\n        this.glassesModel.position.z += (targetPosition.z - this.glassesModel.position.z) * smoothingFactor;\r\n        \r\n        // Enhanced scaling with distance-based adjustment\r\n        let baseScale;\r\n        if (isGLBModel) {\r\n            baseScale = Math.max(0.08, Math.min(0.25, faceWidth * 1.8 * estimatedDistance));\r\n        } else {\r\n            baseScale = Math.max(0.2, Math.min(1.5, faceWidth * 2.5 * estimatedDistance));\r\n        }\r\n        \r\n        // Smooth scale interpolation\r\n        const targetScale = baseScale;\r\n        const currentScale = this.glassesModel.scale.x;\r\n        const newScale = currentScale + (targetScale - currentScale) * smoothingFactor;\r\n        this.glassesModel.scale.set(newScale, newScale, newScale);\r\n        \r\n        // Enhanced rotation calculations for realistic 3D tracking\r\n        const eyeAngle = Math.atan2(\r\n            rightEyeCenter.y - leftEyeCenter.y, \r\n            rightEyeCenter.x - leftEyeCenter.x\r\n        );\r\n        \r\n        // Calculate head pose angles\r\n        const headTilt = this.calculateHeadTilt();\r\n        const faceAngle = this.calculateFaceAngle();\r\n        const headPitch = this.calculateHeadPitch();\r\n        \r\n        // Smooth rotation interpolation\r\n        const targetRotation = {\r\n            x: headPitch * 0.4, // Up/down head movement\r\n            y: faceAngle * 0.5,  // Left/right head turn\r\n            z: eyeAngle + headTilt * 0.3 // Head tilt\r\n        };\r\n        \r\n        this.glassesModel.rotation.x += (targetRotation.x - this.glassesModel.rotation.x) * smoothingFactor;\r\n        this.glassesModel.rotation.y += (targetRotation.y - this.glassesModel.rotation.y) * smoothingFactor;\r\n        this.glassesModel.rotation.z += (targetRotation.z - this.glassesModel.rotation.z) * smoothingFactor;\r\n        \r\n        // Apply realistic lighting based on face orientation\r\n        this.updateGlassesLighting(faceAngle, headPitch);\r\n        \r\n        // Add subtle physics-based movement for realism\r\n        this.applyGlassesPhysics();\r\n        \r\n        this.glassesModel.visible = true;\r\n        this.updateGlassesTransform();\r\n    }\r\n    \r\n    calculateHeadTilt() {\r\n        if (!this.faceLandmarks) return 0;\r\n        \r\n        // Use forehead and chin landmarks to detect head tilt\r\n        const foreheadLeft = this.faceLandmarks[21];\r\n        const foreheadRight = this.faceLandmarks[251];\r\n        \r\n        if (foreheadLeft && foreheadRight) {\r\n            return Math.atan2(\r\n                foreheadRight.y - foreheadLeft.y,\r\n                foreheadRight.x - foreheadLeft.x\r\n            ) * 0.2; // Subtle tilt adjustment\r\n        }\r\n        \r\n        return 0;\r\n    }\r\n    \r\n    calculateFaceAngle() {\r\n        if (!this.faceLandmarks) return 0;\r\n        \r\n        // Use nose and face outline to estimate face angle\r\n        const noseCenter = this.faceLandmarks[1];\r\n        const leftCheek = this.faceLandmarks[234];\r\n        const rightCheek = this.faceLandmarks[454];\r\n        \r\n        if (noseCenter && leftCheek && rightCheek) {\r\n            const leftDistance = Math.abs(noseCenter.x - leftCheek.x);\r\n            const rightDistance = Math.abs(noseCenter.x - rightCheek.x);\r\n            const asymmetry = (rightDistance - leftDistance) / (rightDistance + leftDistance);\r\n            \r\n            return Math.max(-0.5, Math.min(0.5, asymmetry * 2)); // Clamp rotation\r\n        }\r\n        \r\n        return 0;\r\n    }\r\n    \r\n    calculateHeadPitch() {\r\n        if (!this.faceLandmarks) return 0;\r\n        \r\n        // Use forehead and chin to calculate up/down head movement\r\n        const foreheadCenter = this.faceLandmarks[9];\r\n        const chinCenter = this.faceLandmarks[175];\r\n        const noseBridge = this.faceLandmarks[168];\r\n        \r\n        if (foreheadCenter && chinCenter && noseBridge) {\r\n            // Calculate the angle between nose bridge and the forehead-chin line\r\n            const faceVertical = {\r\n                y: chinCenter.y - foreheadCenter.y,\r\n                z: chinCenter.z - foreheadCenter.z\r\n            };\r\n            \r\n            return Math.atan2(faceVertical.z, faceVertical.y) * 0.3; // Subtle pitch adjustment\r\n        }\r\n        \r\n        return 0;\r\n    }\r\n    \r\n    updateGlassesLighting(faceAngle, headPitch) {\r\n        if (!this.glassesModel) return;\r\n        \r\n        // Adjust material properties based on face orientation for realistic lighting\r\n        this.glassesModel.traverse((child) => {\r\n            if (child.isMesh && child.material) {\r\n                // Calculate lighting intensity based on face angle\r\n                const lightIntensity = Math.cos(faceAngle) * Math.cos(headPitch);\r\n                const normalizedIntensity = Math.max(0.3, Math.min(1.0, lightIntensity + 0.5));\r\n                \r\n                // Store original material properties if not already stored\r\n                if (!child.userData.originalMaterial) {\r\n                    child.userData.originalMaterial = {\r\n                        color: child.material.color ? child.material.color.clone() : null,\r\n                        metalness: child.material.metalness || 0,\r\n                        roughness: child.material.roughness || 0.5\r\n                    };\r\n                }\r\n                \r\n                // Apply lighting adjustments\r\n                if (child.material.color && child.userData.originalMaterial.color) {\r\n                    child.material.color.copy(child.userData.originalMaterial.color);\r\n                    child.material.color.multiplyScalar(normalizedIntensity);\r\n                }\r\n                \r\n                // Add subtle metalness variation for glasses frames\r\n                if (child.material.metalness !== undefined) {\r\n                    child.material.metalness = Math.max(0.1, Math.min(0.8, \r\n                        child.userData.originalMaterial.metalness + normalizedIntensity * 0.3));\r\n                }\r\n                \r\n                // Adjust roughness for realistic reflections\r\n                if (child.material.roughness !== undefined) {\r\n                    child.material.roughness = Math.max(0.2, Math.min(0.9, \r\n                        child.userData.originalMaterial.roughness + (1.0 - normalizedIntensity) * 0.3));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    applyGlassesPhysics() {\r\n        if (!this.glassesModel || !this.faceLandmarks) return;\r\n        \r\n        // Initialize physics properties if not exists\r\n        if (!this.glassesPhysics) {\r\n            this.glassesPhysics = {\r\n                velocity: { x: 0, y: 0, z: 0 },\r\n                lastPosition: { \r\n                    x: this.glassesModel.position.x, \r\n                    y: this.glassesModel.position.y, \r\n                    z: this.glassesModel.position.z \r\n                },\r\n                damping: 0.85,\r\n                springStrength: 0.1\r\n            };\r\n        }\r\n        \r\n        // Calculate velocity based on position change\r\n        const deltaX = this.glassesModel.position.x - this.glassesPhysics.lastPosition.x;\r\n        const deltaY = this.glassesModel.position.y - this.glassesPhysics.lastPosition.y;\r\n        const deltaZ = this.glassesModel.position.z - this.glassesPhysics.lastPosition.z;\r\n        \r\n        // Update velocity with damping\r\n        this.glassesPhysics.velocity.x = (this.glassesPhysics.velocity.x + deltaX) * this.glassesPhysics.damping;\r\n        this.glassesPhysics.velocity.y = (this.glassesPhysics.velocity.y + deltaY) * this.glassesPhysics.damping;\r\n        this.glassesPhysics.velocity.z = (this.glassesPhysics.velocity.z + deltaZ) * this.glassesPhysics.damping;\r\n        \r\n        // Apply subtle physics-based movement for natural feel\r\n        const physicsInfluence = 0.02;\r\n        this.glassesModel.position.x += this.glassesPhysics.velocity.x * physicsInfluence;\r\n        this.glassesModel.position.y += this.glassesPhysics.velocity.y * physicsInfluence;\r\n        this.glassesModel.position.z += this.glassesPhysics.velocity.z * physicsInfluence;\r\n        \r\n        // Update last position\r\n        this.glassesPhysics.lastPosition.x = this.glassesModel.position.x;\r\n        this.glassesPhysics.lastPosition.y = this.glassesModel.position.y;\r\n        this.glassesPhysics.lastPosition.z = this.glassesModel.position.z;\r\n        \r\n        // Add subtle breathing effect for ultra-realism\r\n        const time = Date.now() * 0.001;\r\n        const breathingOffset = Math.sin(time * 0.5) * 0.002;\r\n        this.glassesModel.position.y += breathingOffset;\r\n    }\r\n    \r\n    updateGlassesTransform() {\r\n        if (!this.glassesModel) return;\r\n        \r\n        // Store original values before applying adjustments\r\n        const originalScale = this.glassesModel.scale.x;\r\n        const originalPosX = this.glassesModel.position.x;\r\n        const originalPosY = this.glassesModel.position.y;\r\n        const originalRotZ = this.glassesModel.rotation.z;\r\n        \r\n        // Apply user adjustments\r\n        const adjustedScale = originalScale * this.adjustments.size;\r\n        this.glassesModel.scale.set(adjustedScale, adjustedScale, adjustedScale);\r\n        \r\n        // Apply position adjustments\r\n        this.glassesModel.position.x = originalPosX + this.adjustments.positionX * 0.01;\r\n        this.glassesModel.position.y = originalPosY + this.adjustments.positionY * 0.01;\r\n        \r\n        // Apply rotation adjustment\r\n        this.glassesModel.rotation.z = originalRotZ + (this.adjustments.rotation * Math.PI) / 180;\r\n    }\r\n    \r\n    // Fallback positioning for when face detection is not available\r\n    setDefaultGlassesPosition() {\r\n        if (!this.glassesModel) return;\r\n        \r\n        // Default position in center of screen\r\n        this.glassesModel.position.set(0, 0.2, 0);\r\n        this.glassesModel.scale.set(1, 1, 1);\r\n        this.glassesModel.rotation.set(0, 0, 0);\r\n        this.glassesModel.visible = true;\r\n        \r\n        this.updateGlassesTransform();\r\n        \r\n        // Show manual controls hint\r\n        this.showManualControlsHint();\r\n    }\r\n    \r\n    showManualControlsHint() {\r\n        const hintElement = document.createElement('div');\r\n        hintElement.id = 'manualControlsHint';\r\n        hintElement.style.cssText = `\r\n            position: absolute;\r\n            bottom: 10px;\r\n            left: 10px;\r\n            background: rgba(255, 193, 7, 0.9);\r\n            color: black;\r\n            padding: 10px 15px;\r\n            border-radius: 6px;\r\n            font-size: 13px;\r\n            font-family: 'Poppins', sans-serif;\r\n            z-index: 1000;\r\n            max-width: 250px;\r\n            line-height: 1.4;\r\n        `;\r\n        hintElement.innerHTML = `\r\n            <strong>Manual Mode</strong><br>\r\n            Use the controls on the right to adjust glasses position, size, and rotation.\r\n        `;\r\n        \r\n        const cameraContainer = document.querySelector('.camera-container');\r\n        if (cameraContainer) {\r\n            // Remove existing hint\r\n            const existingHint = document.getElementById('manualControlsHint');\r\n            if (existingHint) existingHint.remove();\r\n            \r\n            cameraContainer.appendChild(hintElement);\r\n            \r\n            // Auto-hide after 5 seconds\r\n            setTimeout(() => {\r\n                if (hintElement.parentNode) {\r\n                    hintElement.style.opacity = '0';\r\n                    setTimeout(() => hintElement.remove(), 300);\r\n                }\r\n            }, 5000);\r\n        }\r\n    }\r\n    \r\n    // Enhanced control setup with face detection toggle\r\n    enhanceControls() {\r\n        // Add face detection toggle\r\n        const controlsPanel = document.querySelector('.controls-panel');\r\n        if (controlsPanel && this.faceDetectionEnabled) {\r\n            const faceDetectionToggle = document.createElement('div');\r\n            faceDetectionToggle.className = 'control-section';\r\n            faceDetectionToggle.innerHTML = `\r\n                <div class=\"control-title\">Face Detection</div>\r\n                <label style=\"display: flex; align-items: center; color: white; cursor: pointer;\">\r\n                    <input type=\"checkbox\" id=\"faceDetectionToggle\" checked style=\"margin-right: 8px;\">\r\n                    Auto-position glasses\r\n                </label>\r\n                <small style=\"color: rgba(255,255,255,0.7); font-size: 11px; margin-top: 5px; display: block;\">\r\n                    Uncheck to use manual controls only\r\n                </small>\r\n            `;\r\n            \r\n            // Insert after the first control section\r\n            const firstSection = controlsPanel.querySelector('.control-section');\r\n            if (firstSection) {\r\n                firstSection.parentNode.insertBefore(faceDetectionToggle, firstSection.nextSibling);\r\n            } else {\r\n                controlsPanel.appendChild(faceDetectionToggle);\r\n            }\r\n            \r\n            // Add toggle functionality\r\n            const toggle = document.getElementById('faceDetectionToggle');\r\n            if (toggle) {\r\n                toggle.addEventListener('change', (e) => {\r\n                    this.faceDetectionActive = e.target.checked;\r\n                    if (!this.faceDetectionActive) {\r\n                        this.setDefaultGlassesPosition();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    \r\n    render3D() {\r\n        if (!this.renderer || !this.scene || !this.camera) return;\r\n        \r\n        // Performance optimization: limit frame rate\r\n        const now = performance.now();\r\n        if (!this.lastRenderTime) this.lastRenderTime = now;\r\n        \r\n        const deltaTime = now - this.lastRenderTime;\r\n        const targetFPS = this.performanceMode === 'high' ? 60 : 30;\r\n        const frameInterval = 1000 / targetFPS;\r\n        \r\n        if (deltaTime < frameInterval) return;\r\n        \r\n        this.lastRenderTime = now;\r\n        \r\n        // Animate debug cube for visual feedback\r\n        if (this.debugCube) {\r\n            this.debugCube.rotation.x += 0.01;\r\n            this.debugCube.rotation.y += 0.01;\r\n        }\r\n        \r\n        // Handle glasses model if it exists\r\n        if (this.glassesModel) {\r\n            // Ensure glasses model is visible if it exists\r\n            if (!this.glassesModel.visible) {\r\n                this.glassesModel.visible = true;\r\n            }\r\n            \r\n            // Update dynamic lighting for realistic AR appearance\r\n            this.updateDynamicLighting();\r\n            \r\n            // Frustum culling optimization\r\n            this.glassesModel.frustumCulled = true;\r\n        }\r\n        \r\n        // Always render the scene (for debug helpers and glasses model)\r\n        this.renderer.render(this.scene, this.camera);\r\n        \r\n        // Update performance stats\r\n        this.updatePerformanceStats(deltaTime);\r\n    }\r\n    \r\n    updatePerformanceStats(deltaTime) {\r\n        if (!this.performanceStats) {\r\n            this.performanceStats = {\r\n                frameCount: 0,\r\n                totalTime: 0,\r\n                avgFPS: 0,\r\n                lastUpdate: performance.now()\r\n            };\r\n        }\r\n        \r\n        this.performanceStats.frameCount++;\r\n        this.performanceStats.totalTime += deltaTime;\r\n        \r\n        // Update FPS every second\r\n        const now = performance.now();\r\n        if (now - this.performanceStats.lastUpdate > 1000) {\r\n            this.performanceStats.avgFPS = Math.round(1000 / (this.performanceStats.totalTime / this.performanceStats.frameCount));\r\n            \r\n            // Auto-adjust performance mode based on FPS\r\n            if (this.performanceStats.avgFPS < 20 && this.performanceMode !== 'low') {\r\n                this.performanceMode = 'low';\r\n                console.log('Switching to low performance mode for better frame rate');\r\n            } else if (this.performanceStats.avgFPS > 45 && this.performanceMode !== 'high') {\r\n                this.performanceMode = 'high';\r\n            }\r\n            \r\n            // Reset stats\r\n            this.performanceStats.frameCount = 0;\r\n            this.performanceStats.totalTime = 0;\r\n            this.performanceStats.lastUpdate = now;\r\n        }\r\n    }\r\n\r\n    // 3D Model UI Message Methods\r\n    show3DModelLoading() {\r\n        this.hide3DModelMessage(); // Clear any existing messages\r\n        \r\n        const messageContainer = this.get3DModelMessageContainer();\r\n        messageContainer.innerHTML = `\r\n            <div class=\"model-loading\">\r\n                <div class=\"loading-spinner\"></div>\r\n                <span>Loading 3D model...</span>\r\n                <div class=\"loading-progress\">\r\n                    <div class=\"progress-bar\" id=\"model-progress-bar\"></div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        messageContainer.style.display = 'block';\r\n    }\r\n\r\n    update3DModelLoadingProgress(percentage) {\r\n        const progressBar = document.getElementById('model-progress-bar');\r\n        if (progressBar) {\r\n            progressBar.style.width = percentage + '%';\r\n        }\r\n        \r\n        const loadingText = document.querySelector('.model-loading span');\r\n        if (loadingText) {\r\n            loadingText.textContent = `Loading 3D model... ${percentage}%`;\r\n        }\r\n    }\r\n\r\n    show3DModelError(message) {\r\n        this.hide3DModelMessage(); // Clear any existing messages\r\n        \r\n        const messageContainer = this.get3DModelMessageContainer();\r\n        messageContainer.innerHTML = `\r\n            <div class=\"model-error\">\r\n                <div class=\"error-icon\">⚠️</div>\r\n                <span>${message}</span>\r\n                <button class=\"retry-btn\" onclick=\"virtualTryOn.retryModelLoading()\">Retry</button>\r\n            </div>\r\n        `;\r\n        messageContainer.style.display = 'block';\r\n        \r\n        // Auto-hide error after 8 seconds\r\n        setTimeout(() => {\r\n            this.hide3DModelMessage();\r\n        }, 8000);\r\n    }\r\n\r\n    show3DModelSuccess(message) {\r\n        this.hide3DModelMessage(); // Clear any existing messages\r\n        \r\n        const messageContainer = this.get3DModelMessageContainer();\r\n        messageContainer.innerHTML = `\r\n            <div class=\"model-success\">\r\n                <div class=\"success-icon\">✅</div>\r\n                <span>${message}</span>\r\n            </div>\r\n        `;\r\n        messageContainer.style.display = 'block';\r\n        \r\n        // Auto-hide success message after 3 seconds\r\n        setTimeout(() => {\r\n            this.hide3DModelMessage();\r\n        }, 3000);\r\n    }\r\n\r\n    hide3DModelMessage() {\r\n        const messageContainer = this.get3DModelMessageContainer();\r\n        messageContainer.style.display = 'none';\r\n        messageContainer.innerHTML = '';\r\n    }\r\n\r\n    get3DModelMessageContainer() {\r\n        let container = document.getElementById('model-message-container');\r\n        if (!container) {\r\n            container = document.createElement('div');\r\n            container.id = 'model-message-container';\r\n            container.className = 'model-message-overlay';\r\n            container.style.cssText = `\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                background: rgba(0, 0, 0, 0.8);\r\n                color: white;\r\n                padding: 20px;\r\n                border-radius: 10px;\r\n                text-align: center;\r\n                z-index: 1000;\r\n                font-family: 'Poppins', sans-serif;\r\n                min-width: 250px;\r\n                display: none;\r\n            `;\r\n            \r\n            // Insert into the camera container\r\n            const cameraContainer = document.getElementById('camera-container') || \r\n                                  document.querySelector('.camera-container') || \r\n                                  document.body;\r\n            cameraContainer.appendChild(container);\r\n            \r\n            // Add CSS styles for the message components\r\n            this.addMessageStyles();\r\n        }\r\n        return container;\r\n    }\r\n\r\n    addMessageStyles() {\r\n        if (document.getElementById('model-message-styles')) return;\r\n        \r\n        const style = document.createElement('style');\r\n        style.id = 'model-message-styles';\r\n        style.textContent = `\r\n            .model-loading {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                gap: 15px;\r\n            }\r\n            \r\n            .loading-spinner {\r\n                width: 40px;\r\n                height: 40px;\r\n                border: 4px solid rgba(255, 255, 255, 0.3);\r\n                border-top: 4px solid #fff;\r\n                border-radius: 50%;\r\n                animation: spin 1s linear infinite;\r\n            }\r\n            \r\n            @keyframes spin {\r\n                0% { transform: rotate(0deg); }\r\n                100% { transform: rotate(360deg); }\r\n            }\r\n            \r\n            .loading-progress {\r\n                width: 200px;\r\n                height: 6px;\r\n                background: rgba(255, 255, 255, 0.3);\r\n                border-radius: 3px;\r\n                overflow: hidden;\r\n            }\r\n            \r\n            .progress-bar {\r\n                height: 100%;\r\n                background: linear-gradient(90deg, #4CAF50, #8BC34A);\r\n                width: 0%;\r\n                transition: width 0.3s ease;\r\n            }\r\n            \r\n            .model-error {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                gap: 15px;\r\n            }\r\n            \r\n            .error-icon {\r\n                font-size: 32px;\r\n            }\r\n            \r\n            .retry-btn {\r\n                background: #ff6b6b;\r\n                color: white;\r\n                border: none;\r\n                padding: 8px 16px;\r\n                border-radius: 5px;\r\n                cursor: pointer;\r\n                font-family: 'Poppins', sans-serif;\r\n                transition: background 0.3s ease;\r\n            }\r\n            \r\n            .retry-btn:hover {\r\n                background: #ff5252;\r\n            }\r\n            \r\n            .model-success {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                gap: 15px;\r\n            }\r\n            \r\n            .success-icon {\r\n                font-size: 32px;\r\n            }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n\r\n    retryModelLoading() {\r\n        if (this.currentGLBModel && this.currentGLBModel.path) {\r\n            console.log('Retrying 3D model loading...');\r\n            this.loadGlassesModel(this.currentGLBModel.path);\r\n        } else {\r\n            this.show3DModelError('No 3D model to retry loading');\r\n        }\r\n    }\r\n    \r\n    startDetection() {\r\n        const detect = async () => {\r\n            try {\r\n                const currentTime = performance.now();\r\n                \r\n                if (this.video.readyState === 4) {\r\n                    // Throttle face detection for better performance\r\n                    const shouldDetect = this.faceMesh && \r\n                                       this.faceDetectionEnabled && \r\n                                       this.faceDetectionActive &&\r\n                                       (currentTime - this.lastDetectionTime) >= this.detectionInterval;\r\n                    \r\n                    if (shouldDetect) {\r\n                        this.lastDetectionTime = currentTime;\r\n                        await this.faceMesh.send({ image: this.video });\r\n                    }\r\n                    \r\n                    // Always render the 3D scene for smooth animation\r\n                    this.render3D();\r\n                }\r\n                \r\n                this.animationId = requestAnimationFrame(detect);\r\n            } catch (error) {\r\n                console.warn('Detection error:', error);\r\n                // Continue the animation loop even if detection fails\r\n                this.animationId = requestAnimationFrame(detect);\r\n            }\r\n        };\r\n        detect();\r\n    }\r\n    \r\n    // Performance monitoring\r\n    getPerformanceStats() {\r\n        return {\r\n            faceDetectionEnabled: this.faceDetectionEnabled,\r\n            faceDetectionActive: this.faceDetectionActive,\r\n            faceDetected: this.faceDetected,\r\n            detectionInterval: this.detectionInterval,\r\n            glassesVisible: this.glassesModel ? this.glassesModel.visible : false\r\n        };\r\n    }\r\n    \r\n    // Debug method to check 3D model status\r\n    debug3DModel() {\r\n        const status = {\r\n            hasGlassesModel: !!this.glassesModel,\r\n            modelVisible: this.glassesModel ? this.glassesModel.visible : false,\r\n            modelPosition: this.glassesModel ? this.glassesModel.position : null,\r\n            modelScale: this.glassesModel ? this.glassesModel.scale : null,\r\n            sceneChildren: this.scene ? this.scene.children.length : 0,\r\n            rendererSize: this.renderer ? this.renderer.getSize(new THREE.Vector2()) : null,\r\n            cameraPosition: this.camera ? this.camera.position : null\r\n        };\r\n        \r\n        console.log('3D Model Debug Status:', status);\r\n        \r\n        // Force model to be visible if it exists\r\n        if (this.glassesModel) {\r\n            this.glassesModel.visible = true;\r\n            console.log('Forced model visibility to true');\r\n        }\r\n        \r\n        return status;\r\n    }\r\n    \r\n    // Adjust performance based on device capabilities\r\n    adjustPerformance() {\r\n        // Monitor frame rate and adjust detection frequency and quality\r\n        const now = performance.now();\r\n        if (this.lastFrameTime) {\r\n            const frameTime = now - this.lastFrameTime;\r\n            const fps = 1000 / frameTime;\r\n            const targetFPS = this.qualitySettings[this.performanceMode].targetFPS;\r\n            \r\n            // Track performance over time\r\n            if (!this.performanceHistory) {\r\n                this.performanceHistory = [];\r\n            }\r\n            this.performanceHistory.push(fps);\r\n            \r\n            // Keep only last 30 frames for averaging\r\n            if (this.performanceHistory.length > 30) {\r\n                this.performanceHistory.shift();\r\n            }\r\n            \r\n            // Calculate average FPS\r\n            const avgFPS = this.performanceHistory.reduce((a, b) => a + b, 0) / this.performanceHistory.length;\r\n            \r\n            // Dynamic quality adjustment based on performance\r\n            if (avgFPS < targetFPS * 0.7 && this.performanceMode !== 'low') {\r\n                // Performance is poor, downgrade quality\r\n                const modes = ['high', 'medium', 'low'];\r\n                const currentIndex = modes.indexOf(this.performanceMode);\r\n                if (currentIndex < modes.length - 1) {\r\n                    this.performanceMode = modes[currentIndex + 1];\r\n                    console.log(`Performance downgrade to ${this.performanceMode} mode (avg FPS: ${avgFPS.toFixed(1)})`);\r\n                    this.applyQualitySettings();\r\n                }\r\n            } else if (avgFPS > targetFPS * 1.2 && this.performanceMode !== 'high') {\r\n                // Performance is good, upgrade quality\r\n                const modes = ['low', 'medium', 'high'];\r\n                const currentIndex = modes.indexOf(this.performanceMode);\r\n                if (currentIndex < modes.length - 1) {\r\n                    this.performanceMode = modes[currentIndex + 1];\r\n                    console.log(`Performance upgrade to ${this.performanceMode} mode (avg FPS: ${avgFPS.toFixed(1)})`);\r\n                    this.applyQualitySettings();\r\n                }\r\n            }\r\n            \r\n            // Adjust detection frequency based on current FPS\r\n            if (fps < 20) {\r\n                this.detectionInterval = Math.min(100, this.detectionInterval + 10);\r\n            } else if (fps > 45) {\r\n                this.detectionInterval = Math.max(16, this.detectionInterval - 5);\r\n            }\r\n        }\r\n        this.lastFrameTime = now;\r\n    }\r\n    \r\n    applyQualitySettings() {\r\n        // Apply new quality settings to renderer if available\r\n        if (this.renderer && this.scene) {\r\n            const quality = this.qualitySettings[this.performanceMode];\r\n            \r\n            // Update render size\r\n            const renderWidth = Math.floor(this.canvas.width * quality.renderScale);\r\n            const renderHeight = Math.floor(this.canvas.height * quality.renderScale);\r\n            this.renderer.setSize(renderWidth, renderHeight);\r\n            \r\n            // Update shadow mapping\r\n            if (quality.shadowMapSize > 0 && !this.deviceCapabilities.isMobile) {\r\n                this.renderer.shadowMap.enabled = true;\r\n                this.renderer.shadowMap.setSize(quality.shadowMapSize, quality.shadowMapSize);\r\n            } else {\r\n                this.renderer.shadowMap.enabled = false;\r\n            }\r\n            \r\n            console.log(`Applied ${this.performanceMode} quality settings - Render size: ${renderWidth}x${renderHeight}`);\r\n        }\r\n    }\r\n    \r\n    resizeCanvas() {\r\n        const rect = this.video.getBoundingClientRect();\r\n        this.canvas.width = rect.width;\r\n        this.canvas.height = rect.height;\r\n        \r\n        if (this.renderer) {\r\n            this.renderer.setSize(this.canvas.width, this.canvas.height);\r\n        }\r\n        \r\n        if (this.camera) {\r\n            this.camera.aspect = this.canvas.width / this.canvas.height;\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n    }\r\n    \r\n    capturePhoto() {\r\n        const captureCanvas = document.createElement('canvas');\r\n        const captureCtx = captureCanvas.getContext('2d');\r\n        \r\n        captureCanvas.width = this.video.videoWidth;\r\n        captureCanvas.height = this.video.videoHeight;\r\n        \r\n        // Draw video frame\r\n        captureCtx.drawImage(this.video, 0, 0);\r\n        \r\n        // Draw 3D glasses overlay\r\n        if (this.glassesModel && this.faceDetected) {\r\n            captureCtx.drawImage(this.canvas, 0, 0);\r\n        }\r\n        \r\n        // Download the image\r\n        const link = document.createElement('a');\r\n        link.download = `virtual-try-on-${Date.now()}.png`;\r\n        link.href = captureCanvas.toDataURL();\r\n        link.click();\r\n    }\r\n    \r\n\r\n    \r\n    async switchCamera() {\r\n        try {\r\n            const devices = await navigator.mediaDevices.enumerateDevices();\r\n            const videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n            \r\n            if (videoDevices.length > 1) {\r\n                // Switch between front and back camera\r\n                const currentTrack = this.video.srcObject.getVideoTracks()[0];\r\n                const currentSettings = currentTrack.getSettings();\r\n                const currentFacingMode = currentSettings.facingMode || 'user';\r\n                const newFacingMode = currentFacingMode === 'user' ? 'environment' : 'user';\r\n                \r\n                console.log(`Switching camera from ${currentFacingMode} to ${newFacingMode}`);\r\n                \r\n                // Stop current track\r\n                currentTrack.stop();\r\n                \r\n                // Try to get new stream with different facing mode\r\n                const constraints = {\r\n                    video: { \r\n                        facingMode: { exact: newFacingMode },\r\n                        width: { ideal: 1280, min: 640 },\r\n                        height: { ideal: 720, min: 480 }\r\n                    },\r\n                    audio: false\r\n                };\r\n                \r\n                try {\r\n                    const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n                    this.video.srcObject = stream;\r\n                    \r\n                    // Wait for video to load\r\n                    return new Promise((resolve) => {\r\n                        this.video.onloadedmetadata = () => {\r\n                            this.video.play().then(() => {\r\n                                this.resizeCanvas();\r\n                                console.log('Camera switched successfully');\r\n                                resolve();\r\n                            });\r\n                        };\r\n                    });\r\n                } catch (exactError) {\r\n                    // If exact facing mode fails, try without exact constraint\r\n                    console.log('Exact facing mode failed, trying without exact constraint');\r\n                    const fallbackConstraints = {\r\n                        video: { \r\n                            facingMode: newFacingMode,\r\n                            width: { ideal: 1280, min: 640 },\r\n                            height: { ideal: 720, min: 480 }\r\n                        },\r\n                        audio: false\r\n                    };\r\n                    \r\n                    const stream = await navigator.mediaDevices.getUserMedia(fallbackConstraints);\r\n                    this.video.srcObject = stream;\r\n                    \r\n                    return new Promise((resolve) => {\r\n                        this.video.onloadedmetadata = () => {\r\n                            this.video.play().then(() => {\r\n                                this.resizeCanvas();\r\n                                console.log('Camera switched successfully (fallback)');\r\n                                resolve();\r\n                            });\r\n                        };\r\n                    });\r\n                }\r\n            } else {\r\n                console.log('Only one camera available, cannot switch');\r\n                // Show a brief notification that only one camera is available\r\n                this.showTemporaryMessage('Only one camera available');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error switching camera:', error);\r\n            // Try to restore the original camera if switching failed\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({\r\n                    video: { facingMode: 'user' },\r\n                    audio: false\r\n                });\r\n                this.video.srcObject = stream;\r\n            } catch (restoreError) {\r\n                console.error('Failed to restore camera:', restoreError);\r\n                this.showError('Camera switching failed. Please refresh the page.');\r\n            }\r\n        }\r\n    }\r\n    \r\n    showTemporaryMessage(message) {\r\n        // Create a temporary message overlay\r\n        const messageDiv = document.createElement('div');\r\n        messageDiv.style.cssText = `\r\n            position: fixed;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background: rgba(0, 0, 0, 0.8);\r\n            color: white;\r\n            padding: 15px 25px;\r\n            border-radius: 8px;\r\n            font-family: 'Poppins', sans-serif;\r\n            z-index: 10000;\r\n            pointer-events: none;\r\n        `;\r\n        messageDiv.textContent = message;\r\n        document.body.appendChild(messageDiv);\r\n        \r\n        // Remove after 2 seconds\r\n        setTimeout(() => {\r\n            if (messageDiv.parentNode) {\r\n                messageDiv.parentNode.removeChild(messageDiv);\r\n            }\r\n        }, 2000);\r\n    }\r\n    \r\n    hideLoading() {\r\n        const loadingOverlay = document.getElementById('loadingOverlay');\r\n        if (loadingOverlay) {\r\n            loadingOverlay.style.display = 'none';\r\n        }\r\n    }\r\n    \r\n    showError(message) {\r\n        const loadingOverlay = document.getElementById('loadingOverlay');\r\n        if (loadingOverlay) {\r\n            loadingOverlay.innerHTML = `\r\n                <div class=\"error-message\">\r\n                    <h3>Error</h3>\r\n                    <p>${message}</p>\r\n                    <button onclick=\"location.reload()\" style=\"margin-top: 10px; padding: 10px 20px; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;\">\r\n                        Try Again\r\n                    </button>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n    \r\n    destroy() {\r\n        if (this.animationId) {\r\n            cancelAnimationFrame(this.animationId);\r\n        }\r\n        \r\n        if (this.video && this.video.srcObject) {\r\n            this.video.srcObject.getTracks().forEach(track => track.stop());\r\n        }\r\n        \r\n        if (this.faceMesh) {\r\n            this.faceMesh.close();\r\n        }\r\n    }\r\n}\r\n\r\n// Legacy global initialization for fallback compatibility\r\nif (typeof window !== 'undefined' && !window.virtualTryOn) {\r\n    let virtualTryOn;\r\n\r\n    // Only initialize if not using module system\r\n    if (!document.querySelector('script[type=\"module\"]')) {\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            virtualTryOn = new VirtualTryOn();\r\n        });\r\n\r\n        // Handle page unload\r\n        window.addEventListener('beforeunload', () => {\r\n            if (virtualTryOn) {\r\n                virtualTryOn.destroy();\r\n            }\r\n        });\r\n\r\n        // Handle window resize\r\n        window.addEventListener('resize', () => {\r\n            if (virtualTryOn) {\r\n                virtualTryOn.resizeCanvas();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Function to navigate to home page when header title is clicked\r\nfunction navigateToHome() {\r\n    window.location.href = 'index.html';\r\n}"],"file":"assets/virtual-try-on-CN7LyYq1.js"}